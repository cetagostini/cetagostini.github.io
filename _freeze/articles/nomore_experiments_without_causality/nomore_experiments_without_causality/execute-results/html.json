{
  "hash": "2dfb23322438bd761f9343ba8bc4f08e",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Media Mix Model calibration is useless without causal knowledge\"\ndate: \"2025-04-01\"\ncategories: [python, experimentation, media mix modeling, mmm, bayesian, pymc, pydata, germany, darmstadt]\nimage: \"../images/nomore_experiments_without_causality.png\"\njupyter: cetagostini_web\nformat:\n  html:\n    code-fold: true\n    code-tools: true\n    code-overflow: wrap\n---\n\n# Introduction\n\nImagine you just shipped a shiny new Bayesian Media-Mix Model (MMM) that *perfectly* back-fits years of marketing data. A/B-lift experiments then tell you channel-A is worth **€2.7 M**, but your model insists it is worth **€7 M**. \"Easy fix,\" you think: *calibrate* the MMM with the lift tests—add an extra likelihood term, rerun, publish.\n\nYet the calibrated model still over/under-values the channel based on the experimental evidence. Looks like it can't reconcile the experimental evidence with the data, and adding new calibration for other channels actually makes it worse.\n\nThat is the calibration trap: without causal structure the posterior can't happily reconcile observations and **clean** experiments at the same time.\n\nIn this article we will build a PyMC MMM, add lift-test calibration, and then show—step-by-step—why calibration alone cannot save a misspecified causal story.\n\n---\n\n# Why marketers love calibration\n\n* **Ground-truth anchor.** Lift tests are randomised, so their incremental effects are (almost) unbiased.  \n* **Sample-size boost.** MMMs see every day and every channel; experiments see only a slice. Combining them promises lower variance.  \n* **Storytelling power.** \"Our model *matches* the experiments\" is an executive-friendly sound-bite.\n\nCalibration therefore feels like catching two Bayesian birds with one conjugate stone.\n\n---\n\n# What *is* calibration—mathematically?\n\nFor each experiment $i$ the model predicts a lift\n\n$$\n\\widehat{\\Delta y_i}(\\theta)\\;=\\;\ns\\bigl(x_i+\\Delta x_i;\\,\\theta_{c(i)}\\bigr)\n\\;-\\;\ns\\bigl(x_i;\\,\\theta_{c(i)}\\bigr),\n$$  \n\nwhere  \n\n* $x_i$ – baseline spend before the experiment,  \n* $\\Delta x_i$ – change in spend during the experiment,  \n* $s(\\cdot;\\theta_{c(i)})$ – saturation curve for the channel that experiment $i$ targets,  \n* $\\theta$ – all saturation-curve parameters,  \n* $\\widehat{\\Delta y_i}(\\theta)$ – model-predicted incremental outcome.\n\nWe then attach the observed lift $\\Delta y_i$ and its error $\\sigma_i$ through an additional likelihood\n\n$$\np\\!\\bigl(\\Delta y_i \\mid \\theta\\bigr)\\;=\\;\n\\operatorname{Gamma}\\!\\bigl(\n\\mu=\\lvert\\widehat{\\Delta y_i}(\\theta)\\rvert,\\;\n\\sigma=\\sigma_i\n\\bigr),\n$$  \n\nwhere  \n\n* $\\Delta y_i$ – experimentally measured incremental outcome,  \n* $\\sigma_i$ – reported standard error of $\\Delta y_i$,  \n* $\\mu$ – mean parameter set to the *absolute* predicted lift so the Gamma remains non-negative.\n\nStacking all $n_{\\text{lift}}$ experiments gives the calibrated posterior\n\n$$\np\\!\\bigl(\\theta \\mid \\mathbf y,\\mathcal L\\bigr)\n\\;\\propto\\;\np\\!\\bigl(\\mathbf y \\mid \\theta\\bigr)\\;\n\\prod_{i=1}^{n_{\\text{lift}}}\np\\!\\bigl(\\Delta y_i \\mid \\theta\\bigr)\\;\np(\\theta),\n$$  \n\nwhere  \n\n* $\\mathbf y$ – full time-series of observed outcomes (sales, sign-ups …),  \n* $\\mathcal L$ – the collection of lift-test observations $(\\Delta y_i,\\sigma_i)$,  \n* $p(\\theta)$ – priors for all parameters.\n\nPyMC turns this into a three-liner:  \n\n```python\nadd_lift_measurements_to_likelihood_from_saturation(\n    model=mmm,\n    df_lift=df_lifts,     # experiment data-frame\n    dist=pm.Gamma,\n)\n```\n\nIn simple terms, calibration appends one extra likelihood per experiment: for lift `i` we run the channel's saturation curve at the pre-spend and post-spend levels, subtract the two, and call that result the model-expected incremental response for experiment `i` (a deterministic function of the saturation parameter vector $\\theta$). We then treat the observed lift $\\Delta y_i$ as a Gamma-distributed draw whose mean is the absolute value of that model-expected increment and whose dispersion is the experiment's reported standard error $\\sigma_i$. \n\nThese independent $\\Gamma(\\mu = |\\text{model-expected increment}|, \\sigma = \\sigma_i)$ factors multiply into the original time-series likelihood, yielding a posterior where $\\theta$ is pulled toward values that keep every model-expected increment within the experimental noise band. In effect, each lift test imposes a Bayesian anchor that penalises any parameter setting whose predicted causal effect disagrees with ground-truth, while still allowing the full sales history to inform the remaining uncertainty.\n\nLet's see how this works in practice, by creating a synthetic dataset and fitting a simple MMM.\n\n# Getting started\n\nWe'll use Pytensor to run our data-generation-process (DGP). Let's set the seed for reproducibility, and define the number of observations, and finally add some default configurations for the notebook.\n\n::: {#2808302c .cell execution_count=1}\n``` {.python .cell-code}\nimport warnings\nimport pymc as pm\nimport arviz as az\nimport pytensor.tensor as pt\nfrom pytensor.graph import rewrite_graph\nimport preliz as pz\n\nimport numpy as np\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport graphviz\n\nfrom pymc_marketing.mmm import GeometricAdstock, MichaelisMentenSaturation, MMM\nfrom pymc_marketing.prior import Prior\n\nSEED = 42\nn_observations = 1050\n\nwarnings.filterwarnings(\"ignore\")\n\n# Set the style\naz.style.use(\"arviz-darkgrid\")\nplt.rcParams[\"figure.figsize\"] = [8, 4]\nplt.rcParams[\"figure.dpi\"] = 100\nplt.rcParams[\"axes.labelsize\"] = 6\nplt.rcParams[\"xtick.labelsize\"] = 6\nplt.rcParams[\"ytick.labelsize\"] = 6\n\n%config InlineBackend.figure_format = \"retina\"\n```\n:::\n\n\nNow, we can define the date range.\n\n::: {#e9abe00d .cell execution_count=2}\n``` {.python .cell-code}\nmin_date = pd.to_datetime(\"2022-01-01\")\nmax_date = min_date + pd.Timedelta(days=n_observations)\n\ndate_range = pd.date_range(start=min_date, end=max_date, freq=\"D\")\n\ndf = pd.DataFrame(data={\"date_week\": date_range}).assign(\n    year=lambda x: x[\"date_week\"].dt.year,\n    month=lambda x: x[\"date_week\"].dt.month,\n    dayofyear=lambda x: x[\"date_week\"].dt.dayofyear,\n)\n```\n:::\n\n\nWe can start by creating the spend vectors for each channel. These are the will define later the amount of impressions or exposition we get from each channel, which by the end will transform into sales.\n\n::: {#82989430 .cell execution_count=3}\n``` {.python .cell-code}\nspend_x1 = pt.vector(\"spend_x1\")\nspend_x2 = pt.vector(\"spend_x2\")\nspend_x3 = pt.vector(\"spend_x3\")\nspend_x4 = pt.vector(\"spend_x4\")\n\n# Create sample inputs for demonstration using preliz distributions:\npz_spend_x1 = np.convolve(\n    pz.Gamma(mu=.8, sigma=.3).rvs(size=n_observations, random_state=SEED), \n    np.ones(14) / 14, mode=\"same\"\n)\npz_spend_x1[:14] = pz_spend_x1.mean()\npz_spend_x1[-14:] = pz_spend_x1.mean()\n\npz_spend_x2 = np.convolve(\n    pz.Gamma(mu=.6, sigma=.4).rvs(size=n_observations, random_state=SEED), \n    np.ones(14) / 14, mode=\"same\"\n)\npz_spend_x2[:14] = pz_spend_x2.mean()\npz_spend_x2[-14:] = pz_spend_x2.mean()\n\npz_spend_x3 = np.convolve(\n    pz.Gamma(mu=.2, sigma=.2).rvs(size=n_observations, random_state=SEED), \n    np.ones(14) / 14, mode=\"same\"\n)\npz_spend_x3[:14] = pz_spend_x3.mean()\npz_spend_x3[-14:] = pz_spend_x3.mean()\n\npz_spend_x4 = np.convolve(\n    pz.Gamma(mu=.1, sigma=.03).rvs(size=n_observations, random_state=SEED), \n    np.ones(14) / 14, mode=\"same\"\n)\npz_spend_x4[:14] = pz_spend_x4.mean()\npz_spend_x4[-14:] = pz_spend_x4.mean()\n\nfig, ax = plt.subplots()\nax.plot(date_range[1:], pz_spend_x1, label='Channel 1')\nax.plot(date_range[1:], pz_spend_x2, label='Channel 2')\nax.plot(date_range[1:], pz_spend_x3, label='Channel 3')\nax.plot(date_range[1:], pz_spend_x4, label='Channel 4')\nax.set_xlabel('Time')\nax.set_ylabel('Spend')\nax.legend()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](nomore_experiments_without_causality_files/figure-html/cell-4-output-1.png){width=811 height=411}\n:::\n:::\n\n\nUsing the same logic we can create other components such as trend, noise, seasonality, and certain events.\n\n::: {#c0004eda .cell execution_count=4}\n``` {.python .cell-code}\n## Trend\ntrend = pt.vector(\"trend\")\n# Create a sample input for the trend\nnp_trend = (np.linspace(start=0.0, stop=.50, num=n_observations) + .10) ** (.1 / .4)\n\n## NOISE \nglobal_noise = pt.vector(\"global_noise\")\n# Create a sample input for the noise\npz_global_noise = pz.Normal(mu=0, sigma=.005).rvs(size=n_observations, random_state=SEED)\n\n# EVENTS EFFECT\npt_event_signal = pt.vector(\"event_signal\")\npt_event_contributions = pt.vector(\"event_contributions\")\n\nevent_dates = [\"24-12\", \"09-07\"]  # List of events as month-day strings\nstd_devs = [25, 15]  # List of standard deviations for each event\nevents_coefficients = [.094, .018]\n\nsignals_independent = []\n\n# Initialize the event effect array\nevent_signal = np.zeros(len(date_range))\nevent_contributions = np.zeros(len(date_range))\n\n# Generate event signals\nfor event, std_dev, event_coef in zip(\n    event_dates, std_devs, events_coefficients, strict=False\n):\n    # Find all occurrences of the event in the date range\n    event_occurrences = date_range[date_range.strftime(\"%d-%m\") == event]\n\n    for occurrence in event_occurrences:\n        # Calculate the time difference in days\n        time_diff = (date_range - occurrence).days\n\n        # Generate the Gaussian basis for the event\n        _event_signal = np.exp(-0.5 * (time_diff / std_dev) ** 2)\n\n        # Add the event signal to the event effect\n        signals_independent.append(_event_signal)\n        event_signal += _event_signal\n\n        event_contributions += _event_signal * event_coef\n\nnp_event_signal = event_signal\nnp_event_contributions = event_contributions\n\nplt.plot(pz_global_noise, label='Global Noise')\nplt.plot(np_trend, label='Trend')\nplt.plot(np_event_signal, label='Event Contributions')\nplt.title('Components of the Time Series Model')\nplt.xlabel('Time (days)')\nplt.ylabel('Value')\nplt.legend()\nplt.grid(True, alpha=0.3)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](nomore_experiments_without_causality_files/figure-html/cell-5-output-1.png){width=811 height=411}\n:::\n:::\n\n\nIn order to make it more interesting, lets add a price variable. Usually, price creates more impact as it's slower. The product price contribution function we'll use is a diminishing returns function:\n\n$$f(X, \\alpha, \\lambda) = \\frac{\\alpha}{1 + (X / \\lambda)}$$\n\nwhere $\\alpha$ represents the maximum contribution and $\\lambda$ is a scaling parameter that controls how quickly the contribution diminishes as price increases.\n\n::: {#24b72d2a .cell execution_count=5}\n``` {.python .cell-code}\ndef product_price_contribution(X, alpha, lam):\n    return alpha / (1 + (X / lam))\n    \n# Create a product price vector.\nproduct_price = pt.vector(\"product_price\")\nproduct_price_alpha = pt.scalar(\"product_price_alpha\")\nproduct_price_lam = pt.scalar(\"product_price_lam\")\n\n# Create a sample input for the product price\npz_product_price = np.convolve(\n    pz.Gamma(mu=.05, sigma=.02).rvs(size=n_observations, random_state=SEED), \n    np.ones(14) / 14, mode=\"same\"\n)\npz_product_price[:14] = pz_product_price.mean()\npz_product_price[-14:] = pz_product_price.mean()\n\nproduct_price_alpha_value = .08\nproduct_price_lam_value = .03\n\n# Direct contribution to the target.\npt_product_price_contribution = product_price_contribution(\n    product_price, \n    product_price_alpha, \n    product_price_lam\n)\n\n# plot the product price contribution\nfig, (ax1, ax2) = plt.subplots(1, 2)\n\n# Plot the raw price data\nax1.plot(pz_product_price, color=\"green\")\nax1.set_title('Product Price')\nax1.set_xlabel('Time (days)')\nax1.set_ylabel('Price')\nax1.grid(True, alpha=0.3)\n\n# Plot the price contribution\nprice_contribution = pt_product_price_contribution.eval({\n    \"product_price\": pz_product_price,\n    \"product_price_alpha\": product_price_alpha_value,\n    \"product_price_lam\": product_price_lam_value\n})\nax2.plot(price_contribution, color=\"black\")\nax2.set_title('Price Contribution')\nax2.set_xlabel('Time (days)')\nax2.set_ylabel('Contribution')\nax2.grid(True, alpha=0.3)\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](nomore_experiments_without_causality_files/figure-html/cell-6-output-1.png){width=788 height=386}\n:::\n:::\n\n\nWith all the principal components in place, all parent nodes we can start to write down our causal DAG to define the relationships we want to explain.\n\n::: {#051f88d0 .cell execution_count=6}\n``` {.python .cell-code}\n# Plot causal graph of the vars x1, x2, x3, x4 using graphviz\ncdag_impressions = graphviz.Digraph(comment='Causal DAG for Impressions')\n\ncdag_impressions.node('spend_x1', 'Spend X1')\ncdag_impressions.node('spend_x2', 'Spend X2')\ncdag_impressions.node('spend_x3', 'Spend X3')\ncdag_impressions.node('spend_x4', 'Spend X4')\ncdag_impressions.node('events', 'Events')\n\ncdag_impressions.edge('spend_x1', 'impressions_x1')\ncdag_impressions.edge('spend_x2', 'impressions_x2')\ncdag_impressions.edge('spend_x3', 'impressions_x3')\ncdag_impressions.edge('spend_x4', 'impressions_x4')\n\ncdag_impressions.edge('impressions_x1', 'impressions_x3')\ncdag_impressions.edge('impressions_x2', 'impressions_x3')\ncdag_impressions.edge('impressions_x2', 'impressions_x4')\n\ncdag_impressions.edge('events', 'impressions_x2')\ncdag_impressions.edge('events', 'impressions_x3')\n\ncdag_impressions\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n![](nomore_experiments_without_causality_files/figure-html/cell-7-output-1.svg){}\n:::\n:::\n\n\nOnce our causal graph is defined, we can start to write down in pytensor the structure and relationships.\n\n::: {#2fba34eb .cell execution_count=7}\n``` {.python .cell-code}\n# Create a impressions vector, result of x1, x2, x3, x4. by some beta with daily values.\n# Define all parameters as PyTensor variables\nbeta_x1 = pt.vector(\"beta_x1\")\nimpressions_x1 = spend_x1 * beta_x1\n\nbeta_x2 = pt.vector(\"beta_x2\")\nalpha_event_x2 = pt.scalar(\"alpha_event_x2\")\nimpressions_x2 = spend_x2 * beta_x2 + pt_event_signal * alpha_event_x2\n\nbeta_x3 = pt.vector(\"beta_x3\")\nalpha_event_x3 = pt.scalar(\"alpha_event_x3\")\nalpha_x1_x3 = pt.scalar(\"alpha_x1_x3\")\nalpha_x2_x3 = pt.scalar(\"alpha_x2_x3\")\nimpressions_x3 = spend_x3 * beta_x3 + pt_event_signal * alpha_event_x3 + (\n    impressions_x2 * alpha_x2_x3\n    + impressions_x1 * alpha_x1_x3\n)\n\nbeta_x4 = pt.vector(\"beta_x4\")\nalpha_x2_x4 = pt.scalar(\"alpha_x2_x4\")\nimpressions_x4 = spend_x4 * beta_x4 + impressions_x2 * alpha_x2_x4\n\n# Create sample values for the parameters (to be used in eval)\npz_beta_x1 = pz.Beta(alpha=0.05, beta=.1).rvs(size=n_observations, random_state=SEED)\npz_beta_x2 = pz.Beta(alpha=.015, beta=.05).rvs(size=n_observations, random_state=SEED)\npz_alpha_event_x2 = 0.015\npz_beta_x3 = pz.Beta(alpha=.1, beta=.1).rvs(size=n_observations, random_state=SEED)\npz_alpha_event_x3 = 0.001\npz_alpha_x1_x3 = 0.005\npz_alpha_x2_x3 = 0.12\npz_beta_x4 = pz.Beta(alpha=.125, beta=.05).rvs(size=n_observations, random_state=SEED)\npz_alpha_x2_x4 = 0.01\n\n# plot all impressions\n# Define dependencies for each variable\nx1_deps = {\n    \"beta_x1\": pz_beta_x1,\n    \"spend_x1\": pz_spend_x1,\n}\n\nx2_deps = {\n    \"beta_x2\": pz_beta_x2,\n    \"spend_x2\": pz_spend_x2,\n    \"alpha_event_x2\": pz_alpha_event_x2,\n    \"event_signal\": event_signal[:-1],  # Slice to match 1050 length\n}\n\n# For x3, we need all dependencies from x1 and x2 plus its own\nx3_deps = {\n    \"beta_x3\": pz_beta_x3,\n    \"spend_x3\": pz_spend_x3,\n    \"alpha_x2_x3\": pz_alpha_x2_x3,\n    \"alpha_event_x3\": pz_alpha_event_x3,\n    \"alpha_x1_x3\": pz_alpha_x1_x3,\n    **x1_deps,\n    **x2_deps,\n}\n\n# For x4, we need dependencies from x2 plus its own\nx4_deps = {\n    \"beta_x4\": pz_beta_x4,\n    \"spend_x4\": pz_spend_x4,\n    \"alpha_x2_x4\": pz_alpha_x2_x4,\n    **x2_deps,\n}\n\n# Plot each impression series\nfig, axs = plt.subplots(2, 2, sharex='row', sharey='row')\n\n# Channel 1\naxs[0, 0].plot(impressions_x1.eval(x1_deps), color='blue')\naxs[0, 0].set_title('Channel 1')\naxs[0, 0].set_ylabel('Impressions')\n\n# Channel 2\naxs[0, 1].plot(impressions_x2.eval(x2_deps), color='orange')\naxs[0, 1].set_title('Channel 2')\n\n# Channel 3\naxs[1, 0].plot(impressions_x3.eval(x3_deps), color='green')\naxs[1, 0].set_title('Channel 3')\naxs[1, 0].set_xlabel('Time')\naxs[1, 0].set_ylabel('Impressions')\n\n# Channel 4\naxs[1, 1].plot(impressions_x4.eval(x4_deps), color='red')\naxs[1, 1].set_title('Channel 4')\naxs[1, 1].set_xlabel('Time')\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](nomore_experiments_without_causality_files/figure-html/cell-8-output-1.png){width=788 height=386}\n:::\n:::\n\n\n::: {.callout-note}\n## Visualizing the computational graph\n\nIn order to check we write down the process properly, we can ask PyTensor to print our structural causal model. This is not necessary for the analysis, but can be helpful for debugging and understanding the model structure.\n\n::: {#70223d0f .cell execution_count=8}\n``` {.python .cell-code}\nimport pytensor.printing as printing\n# Plot the graph of our model using pytensor\nprinting.pydotprint(rewrite_graph(impressions_x4), outfile=\"images/impressions.png\", var_with_name_simple=True)\n# Display the generated graph\nfrom IPython.display import Image\nImage(filename=\"images/impressions.png\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe output file is available at images/impressions.png\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=8}\n![](nomore_experiments_without_causality_files/figure-html/cell-9-output-2.png){}\n:::\n:::\n\n\nIf, you don't like to see the graphical version, you can ask for the string representation.\n\n::: {#94ac5f64 .cell execution_count=9}\n``` {.python .cell-code}\n# dprint the target_var\nrewrite_graph(impressions_x4).dprint(depth=5);\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAdd [id A]\n ├─ Mul [id B]\n │  ├─ spend_x4 [id C]\n │  └─ beta_x4 [id D]\n └─ Mul [id E]\n    ├─ Add [id F]\n    │  ├─ Mul [id G]\n    │  │  ├─ spend_x2 [id H]\n    │  │  └─ beta_x2 [id I]\n    │  └─ Mul [id J]\n    │     ├─ event_signal [id K]\n    │     └─ ExpandDims{axis=0} [id L]\n    └─ ExpandDims{axis=0} [id M]\n       └─ alpha_x2_x4 [id N]\n```\n:::\n:::\n\n\n:::\n\nNow, let's define our forward pass - how media exposure actually impacts our target variable. In marketing, we typically see two key effects: saturation (diminishing returns) and lagging (delayed impact). We'll model these using the Michaelis-Menten function for saturation and Geometric Adstock for the lagging effects.\n\n::: {#4a686c2b .cell execution_count=10}\n``` {.python .cell-code}\n# Creating forward pass for impressions\ndef forward_pass(x, adstock_alpha, saturation_lam, saturation_alpha):\n    # return type pytensor.tensor.variable.TensorVariable\n    return MichaelisMentenSaturation.function(\n        MichaelisMentenSaturation, \n        x=GeometricAdstock(\n            l_max=24, normalize=False\n        ).function(\n            x=x, alpha=adstock_alpha,\n        ), lam=saturation_lam, alpha=saturation_alpha,\n    )\n\n# Applying forward pass to impressions\n# Create scalars variables for the parameters x2, x3, x4\npt_saturation_lam_x2 = pt.scalar(\"saturation_lam_x2\")\npt_saturation_alpha_x2 = pt.scalar(\"saturation_alpha_x2\")\n\npt_saturation_lam_x3 = pt.scalar(\"saturation_lam_x3\")\npt_saturation_alpha_x3 = pt.scalar(\"saturation_alpha_x3\")\n\npt_saturation_lam_x4 = pt.scalar(\"saturation_lam_x4\")\npt_saturation_alpha_x4 = pt.scalar(\"saturation_alpha_x4\")\n\npt_global_adstock_effect = pt.scalar(\"global_adstock_alpha\")\n\n# Apply forward pass to impressions\nimpressions_x2_forward = forward_pass(\n    impressions_x2, \n    pt_global_adstock_effect, \n    pt_saturation_lam_x2, \n    pt_saturation_alpha_x2\n)\n\nimpressions_x3_forward = forward_pass(\n    impressions_x3, \n    pt_global_adstock_effect, \n    pt_saturation_lam_x3, \n    pt_saturation_alpha_x3\n)\n\nimpressions_x4_forward = forward_pass(\n    impressions_x4, \n    pt_global_adstock_effect, \n    pt_saturation_lam_x4, \n    pt_saturation_alpha_x4\n)\n```\n:::\n\n\nWith all of the following in place, we can define the causal DAG for the target variable and the structural equation as the sum of all previous variables.\n\n::: {#7fcfb417 .cell execution_count=11}\n``` {.python .cell-code}\n# Plot graphviz causal dag for the target_var\n# Create a Graphviz object\ndot = graphviz.Digraph(comment='Causal DAG for Target Variable')\n\n# Add nodes for each variable\ndot.node('spend_x1', 'Spend X1')\ndot.node('spend_x2', 'Spend X2')\ndot.node('spend_x3', 'Spend X3')\ndot.node('spend_x4', 'Spend X4')\ndot.node('trend', 'Trend')\ndot.node('global_noise', 'Global Noise')\ndot.node('event_contributions', 'Events')\ndot.node('product_price_contribution', 'Product Price Contribution')\n\ndot.edge('spend_x1', 'impressions_x1')\ndot.edge('spend_x2', 'impressions_x2')\ndot.edge('spend_x3', 'impressions_x3')\ndot.edge('spend_x4', 'impressions_x4')\n\ndot.edge('impressions_x1', 'impressions_x3')\ndot.edge('impressions_x2', 'impressions_x3')\ndot.edge('impressions_x2', 'impressions_x4')\ndot.edge('event_contributions', 'impressions_x2')\ndot.edge('event_contributions', 'impressions_x3')\n\ndot.edge('trend', 'target_var')\ndot.edge('global_noise', 'target_var')\ndot.edge('event_contributions', 'target_var')\ndot.edge('product_price_contribution', 'target_var')\n\ndot.edge('impressions_x2', 'target_var')\ndot.edge('impressions_x3', 'target_var')\ndot.edge('impressions_x4', 'target_var')\n\n# Render the graph\ndot\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n![](nomore_experiments_without_causality_files/figure-html/cell-12-output-1.svg){}\n:::\n:::\n\n\n$$\n\\begin{align}\n\\text{Target} &\\sim \\sum_{i \\in \\{2,3,4\\}} f_i(\\text{impressions}_i) + \\\\\n&\\text{event\\_contributions} + \\\\\n&\\text{product\\_price\\_contribution} + \\\\\n&\\text{trend} + \\\\\n&\\text{noise}\n\\end{align}\n$$\n\nWhere $f_i$ represents the forward pass function (adstock and saturation) applied to each channel's impressions.\n\n::: {#6762a90f .cell execution_count=12}\n``` {.python .cell-code}\ntarget_var = rewrite_graph(\n    impressions_x4_forward + \n    impressions_x3_forward +\n    impressions_x2_forward +\n    pt_event_contributions +\n    pt_product_price_contribution + \n    trend + \n    global_noise\n)\n\n# Eval target_var and plot\nnp_target_var = target_var.eval({\n    \"spend_x4\": pz_spend_x4,\n    \"spend_x3\": pz_spend_x3,\n    \"spend_x2\": pz_spend_x2,\n    \"spend_x1\": pz_spend_x1,\n    \"event_signal\": event_signal[:-1],\n    \"alpha_event_x2\": pz_alpha_event_x2,\n    \"alpha_event_x3\": pz_alpha_event_x3,\n    \"alpha_x1_x3\": pz_alpha_x1_x3,\n    \"alpha_x2_x3\": pz_alpha_x2_x3,\n    \"alpha_x2_x4\": pz_alpha_x2_x4,\n    \"beta_x2\": pz_beta_x2,\n    \"beta_x3\": pz_beta_x3,\n    \"beta_x4\": pz_beta_x4,\n    \"beta_x1\": pz_beta_x1,\n    \"saturation_lam_x2\": .5,\n    \"saturation_alpha_x2\": .2,\n    \"saturation_lam_x3\": .7,\n    \"saturation_alpha_x3\": .7,\n    \"saturation_lam_x4\": .2,\n    \"saturation_alpha_x4\": .1,\n    \"global_adstock_alpha\": .2,\n    \"product_price\": pz_product_price,\n    \"event_contributions\": np_event_contributions[:-1],\n    \"product_price_alpha\": product_price_alpha_value,\n    \"product_price_lam\": product_price_lam_value,\n    \"trend\": np_trend,\n    \"global_noise\": pz_global_noise,\n})\n\nplt.plot(np_target_var, linewidth=2)\nplt.title('Target Variable Over Time', fontsize=14)\nplt.xlabel('Time Period', fontsize=12)\nplt.ylabel('Target Value', fontsize=12)\nplt.grid(True, alpha=0.3)\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](nomore_experiments_without_causality_files/figure-html/cell-13-output-1.png){width=791 height=390}\n:::\n:::\n\n\nNow, we can imagine our dataframe in this case will be something like the following:\n\n::: {#84fe6225 .cell execution_count=13}\n``` {.python .cell-code}\n# make dataset with impressions x1, x2, x3, x4 and target_var\nscaler_factor_for_all = 150\ndates = pd.date_range(start='2020-01-01', periods=n_observations, freq='D')\ndata = pd.DataFrame({\n    \"date\": dates,\n    \"target_var\": np.round(np_target_var * scaler_factor_for_all, 4),\n    \"impressions_x1\": np.round(impressions_x1.eval(x1_deps) * scaler_factor_for_all, 4),\n    \"impressions_x2\": np.round(impressions_x2.eval(x2_deps) * scaler_factor_for_all, 4),\n    \"impressions_x3\": np.round(impressions_x3.eval(x3_deps) * scaler_factor_for_all, 4),\n    \"impressions_x4\": np.round(impressions_x4.eval(x4_deps) * scaler_factor_for_all, 4),\n    \"event_2020_09\": np.round(signals_independent[0][:-1], 4),\n    \"event_2020_12\": np.round(signals_independent[1][:-1], 4),\n    \"event_2021_09\": np.round(signals_independent[2][:-1], 4),\n    \"event_2021_12\": np.round(signals_independent[3][:-1], 4),\n    \"event_2022_09\": np.round(signals_independent[4][:-1], 4),\n})\ndata[\"trend\"] = data.index\ndata.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>date</th>\n      <th>target_var</th>\n      <th>impressions_x1</th>\n      <th>impressions_x2</th>\n      <th>impressions_x3</th>\n      <th>impressions_x4</th>\n      <th>event_2020_09</th>\n      <th>event_2020_12</th>\n      <th>event_2021_09</th>\n      <th>event_2021_12</th>\n      <th>event_2022_09</th>\n      <th>trend</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2020-01-01</td>\n      <td>128.7894</td>\n      <td>112.9178</td>\n      <td>30.9076</td>\n      <td>34.3534</td>\n      <td>15.0851</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2020-01-02</td>\n      <td>123.5265</td>\n      <td>74.9429</td>\n      <td>4.3523</td>\n      <td>27.7279</td>\n      <td>14.7826</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2020-01-03</td>\n      <td>98.5682</td>\n      <td>0.0000</td>\n      <td>0.0000</td>\n      <td>0.0000</td>\n      <td>0.0000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2020-01-04</td>\n      <td>107.3861</td>\n      <td>5.3253</td>\n      <td>0.0001</td>\n      <td>12.7077</td>\n      <td>13.7833</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2020-01-05</td>\n      <td>93.9367</td>\n      <td>0.0000</td>\n      <td>0.0000</td>\n      <td>0.0001</td>\n      <td>5.6283</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>4</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nIf we don't think in a causal way, we will probably just say, \"lets add all to the blender\".\n\n::: {#24af3dbe .cell execution_count=14}\n``` {.python .cell-code}\n# Building priors for adstock and saturation\nadstock_priors = {\n    \"alpha\": Prior(\"Beta\", alpha=1, beta=1, dims=\"channel\"),\n}\n\nadstock = GeometricAdstock(l_max=28, priors=adstock_priors)\n\nsaturation_priors = {\n    \"lam\": Prior(\n        \"Gamma\",\n        mu=2,\n        sigma=1,\n        dims=\"channel\",\n    ),\n    \"alpha\": Prior(\n        \"Gamma\",\n        mu=.5,\n        sigma=.5,\n        dims=\"channel\",\n    ),\n}\n\nsaturation = MichaelisMentenSaturation(priors=saturation_priors)\n\n# Split data into train and test sets\ntrain_idx = 879\n\nX_train = data.iloc[:train_idx].drop(columns=[\"target_var\"])\nX_test = data.iloc[train_idx:].drop(columns=[\"target_var\"])\ny_train = data.iloc[:train_idx][\"target_var\"]\ny_test = data.iloc[train_idx:][\"target_var\"]\n\ncontrol_columns = [\n    \"event_2020_09\", \"event_2020_12\", \n    \"event_2021_09\", \"event_2021_12\", \n    \"event_2022_09\",\n    \"trend\"\n]\nchannel_columns = [\n    col for col in X_train.columns if col not in control_columns and col != \"date\"\n]\n\n# Model config\nmodel_config = {\n    \"likelihood\": Prior(\n        \"TruncatedNormal\",\n        lower=0,\n        sigma=Prior(\"HalfNormal\", sigma=1),\n        dims=\"date\",\n    ),\n}\n\n# sampling options for PyMC\nsample_kwargs = {\n    \"tune\": 1000,\n    \"draws\": 500,\n    \"chains\": 4,\n    \"random_seed\": 42,\n    \"target_accept\": 0.94,\n    \"nuts_sampler\": \"nutpie\",\n}\n\nnon_causal_mmm = MMM(\n    date_column=\"date\",\n    channel_columns=channel_columns,\n    control_columns=control_columns,\n    adstock=adstock,\n    saturation=saturation,\n    model_config=model_config,\n    sampler_config=sample_kwargs\n)\nnon_causal_mmm.build_model(X_train, y_train)\n```\n:::\n\n\n:::callout-note\n## Building the model\n\nAll PyMC models are structural causal models, which means they represent the causal generative process of the data. We can visualize this process through a Directed Acyclic Graph (DAG) that shows how variables influence each other in the model.\n\n::: {#48e7dc22 .cell execution_count=15}\n``` {.python .cell-code}\nnon_causal_mmm.model.to_graphviz()\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n![](nomore_experiments_without_causality_files/figure-html/cell-16-output-1.svg){}\n:::\n:::\n\n\n:::\n\nOnce the model is build, we can train it.\n\n::: {#b10d2df2 .cell execution_count=16}\n``` {.python .cell-code}\nnon_causal_mmm.fit(X_train, y_train,)\nnon_causal_mmm.sample_posterior_predictive(X_train, extend_idata=True, combined=True)\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n<style>\n    :root {\n        --column-width-1: 40%; /* Progress column width */\n        --column-width-2: 15%; /* Chain column width */\n        --column-width-3: 15%; /* Divergences column width */\n        --column-width-4: 15%; /* Step Size column width */\n        --column-width-5: 15%; /* Gradients/Draw column width */\n    }\n\n    .nutpie {\n        max-width: 800px;\n        margin: 10px auto;\n        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        //color: #333;\n        //background-color: #fff;\n        padding: 10px;\n        box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n        border-radius: 8px;\n        font-size: 14px; /* Smaller font size for a more compact look */\n    }\n    .nutpie table {\n        width: 100%;\n        border-collapse: collapse; /* Remove any extra space between borders */\n    }\n    .nutpie th, .nutpie td {\n        padding: 8px 10px; /* Reduce padding to make table more compact */\n        text-align: left;\n        border-bottom: 1px solid #888;\n    }\n    .nutpie th {\n        //background-color: #f0f0f0;\n    }\n\n    .nutpie th:nth-child(1) { width: var(--column-width-1); }\n    .nutpie th:nth-child(2) { width: var(--column-width-2); }\n    .nutpie th:nth-child(3) { width: var(--column-width-3); }\n    .nutpie th:nth-child(4) { width: var(--column-width-4); }\n    .nutpie th:nth-child(5) { width: var(--column-width-5); }\n\n    .nutpie progress {\n        width: 100%;\n        height: 15px; /* Smaller progress bars */\n        border-radius: 5px;\n    }\n    progress::-webkit-progress-bar {\n        background-color: #eee;\n        border-radius: 5px;\n    }\n    progress::-webkit-progress-value {\n        background-color: #5cb85c;\n        border-radius: 5px;\n    }\n    progress::-moz-progress-bar {\n        background-color: #5cb85c;\n        border-radius: 5px;\n    }\n    .nutpie .progress-cell {\n        width: 100%;\n    }\n\n    .nutpie p strong { font-size: 16px; font-weight: bold; }\n\n    @media (prefers-color-scheme: dark) {\n        .nutpie {\n            //color: #ddd;\n            //background-color: #1e1e1e;\n            box-shadow: 0 4px 6px rgba(0,0,0,0.2);\n        }\n        .nutpie table, .nutpie th, .nutpie td {\n            border-color: #555;\n            color: #ccc;\n        }\n        .nutpie th {\n            background-color: #2a2a2a;\n        }\n        .nutpie progress::-webkit-progress-bar {\n            background-color: #444;\n        }\n        .nutpie progress::-webkit-progress-value {\n            background-color: #3178c6;\n        }\n        .nutpie progress::-moz-progress-bar {\n            background-color: #3178c6;\n        }\n    }\n</style>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n<div class=\"nutpie\">\n    <p><strong>Sampler Progress</strong></p>\n    <p>Total Chains: <span id=\"total-chains\">4</span></p>\n    <p>Active Chains: <span id=\"active-chains\">0</span></p>\n    <p>\n        Finished Chains:\n        <span id=\"active-chains\">4</span>\n    </p>\n    <p>Sampling for now</p>\n    <p>\n        Estimated Time to Completion:\n        <span id=\"eta\">now</span>\n    </p>\n\n    <progress\n        id=\"total-progress-bar\"\n        max=\"6000\"\n        value=\"6000\">\n    </progress>\n    <table>\n        <thead>\n            <tr>\n                <th>Progress</th>\n                <th>Draws</th>\n                <th>Divergences</th>\n                <th>Step Size</th>\n                <th>Gradients/Draw</th>\n            </tr>\n        </thead>\n        <tbody id=\"chain-details\">\n            \n                <tr>\n                    <td class=\"progress-cell\">\n                        <progress\n                            max=\"1500\"\n                            value=\"1500\">\n                        </progress>\n                    </td>\n                    <td>1500</td>\n                    <td>1</td>\n                    <td>0.22</td>\n                    <td>15</td>\n                </tr>\n            \n                <tr>\n                    <td class=\"progress-cell\">\n                        <progress\n                            max=\"1500\"\n                            value=\"1500\">\n                        </progress>\n                    </td>\n                    <td>1500</td>\n                    <td>1</td>\n                    <td>0.19</td>\n                    <td>15</td>\n                </tr>\n            \n                <tr>\n                    <td class=\"progress-cell\">\n                        <progress\n                            max=\"1500\"\n                            value=\"1500\">\n                        </progress>\n                    </td>\n                    <td>1500</td>\n                    <td>0</td>\n                    <td>0.20</td>\n                    <td>31</td>\n                </tr>\n            \n                <tr>\n                    <td class=\"progress-cell\">\n                        <progress\n                            max=\"1500\"\n                            value=\"1500\">\n                        </progress>\n                    </td>\n                    <td>1500</td>\n                    <td>1</td>\n                    <td>0.21</td>\n                    <td>31</td>\n                </tr>\n            \n            </tr>\n        </tbody>\n    </table>\n</div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<script type=\"application/vnd.jupyter.widget-view+json\">\n{\"model_id\":\"4762d4fe81c0457ca9a0674e06599376\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n</script>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSampling: [y]\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<script type=\"application/vnd.jupyter.widget-view+json\">\n{\"model_id\":\"4d10e73519c948279000f134483c9083\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n</script>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=16}\n```{=html}\n<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n *\n */\n\n:root {\n  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n  --xr-background-color: var(--jp-layout-color0, white);\n  --xr-background-color-row-even: var(--jp-layout-color1, white);\n  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n}\n\nhtml[theme=\"dark\"],\nhtml[data-theme=\"dark\"],\nbody[data-theme=\"dark\"],\nbody.vscode-dark {\n  --xr-font-color0: rgba(255, 255, 255, 1);\n  --xr-font-color2: rgba(255, 255, 255, 0.54);\n  --xr-font-color3: rgba(255, 255, 255, 0.38);\n  --xr-border-color: #1f1f1f;\n  --xr-disabled-color: #515151;\n  --xr-background-color: #111111;\n  --xr-background-color-row-even: #111111;\n  --xr-background-color-row-odd: #313131;\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-array-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: inline-block;\n  opacity: 0;\n  height: 0;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:focus + label {\n  border: 2px solid var(--xr-font-color0);\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: \"►\";\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: \"▼\";\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: \"(\";\n}\n\n.xr-dim-list:after {\n  content: \")\";\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: \",\";\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  margin-bottom: 0;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  background-color: var(--xr-background-color) !important;\n  padding-bottom: 5px !important;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 14MB\nDimensions:  (date: 879, sample: 2000)\nCoordinates:\n  * date     (date) datetime64[ns] 7kB 2020-01-01 2020-01-02 ... 2022-05-28\n  * sample   (sample) object 16kB MultiIndex\n  * chain    (sample) int64 16kB 0 0 0 0 0 0 0 0 0 0 0 ... 3 3 3 3 3 3 3 3 3 3 3\n  * draw     (sample) int64 16kB 0 1 2 3 4 5 6 7 ... 493 494 495 496 497 498 499\nData variables:\n    y        (date, sample) float64 14MB 131.9 105.5 103.5 ... 155.4 161.0 180.4\nAttributes:\n    created_at:                 2025-08-23T18:17:10.308861+00:00\n    arviz_version:              0.21.0\n    inference_library:          pymc\n    inference_library_version:  5.25.1</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-29f808e5-6ead-4d04-abf0-b14c587aa28e' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-29f808e5-6ead-4d04-abf0-b14c587aa28e' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>date</span>: 879</li><li><span class='xr-has-index'>sample</span>: 2000</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-a5b2058c-f4f6-42e9-9dfb-87efbee58988' class='xr-section-summary-in' type='checkbox'  checked><label for='section-a5b2058c-f4f6-42e9-9dfb-87efbee58988' class='xr-section-summary' >Coordinates: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>date</span></div><div class='xr-var-dims'>(date)</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>2020-01-01 ... 2022-05-28</div><input id='attrs-f13a4b74-abf8-43f1-8400-ef5718fa7762' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-f13a4b74-abf8-43f1-8400-ef5718fa7762' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-902fb9cf-1af4-4496-adac-16284935e786' class='xr-var-data-in' type='checkbox'><label for='data-902fb9cf-1af4-4496-adac-16284935e786' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;2020-01-01T00:00:00.000000000&#x27;, &#x27;2020-01-02T00:00:00.000000000&#x27;,\n       &#x27;2020-01-03T00:00:00.000000000&#x27;, ..., &#x27;2022-05-26T00:00:00.000000000&#x27;,\n       &#x27;2022-05-27T00:00:00.000000000&#x27;, &#x27;2022-05-28T00:00:00.000000000&#x27;],\n      dtype=&#x27;datetime64[ns]&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>sample</span></div><div class='xr-var-dims'>(sample)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>MultiIndex</div><input id='attrs-c71364b6-7cc3-4029-a20f-fac70e19420d' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-c71364b6-7cc3-4029-a20f-fac70e19420d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-0b5bf638-fed9-42f5-8d3c-ee054548c411' class='xr-var-data-in' type='checkbox'><label for='data-0b5bf638-fed9-42f5-8d3c-ee054548c411' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([(0, 0), (0, 1), (0, 2), ..., (3, 497), (3, 498), (3, 499)], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>chain</span></div><div class='xr-var-dims'>(sample)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>0 0 0 0 0 0 0 0 ... 3 3 3 3 3 3 3 3</div><input id='attrs-0e22f618-05eb-40e5-99a3-79c476fd8428' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-0e22f618-05eb-40e5-99a3-79c476fd8428' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a9269d7d-f529-4f69-9481-8536ae93ed02' class='xr-var-data-in' type='checkbox'><label for='data-a9269d7d-f529-4f69-9481-8536ae93ed02' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([0, 0, 0, ..., 3, 3, 3])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>draw</span></div><div class='xr-var-dims'>(sample)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>0 1 2 3 4 5 ... 495 496 497 498 499</div><input id='attrs-9d43adff-69ab-45d3-a4f5-ecd38451a841' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-9d43adff-69ab-45d3-a4f5-ecd38451a841' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-3ffa2ba5-76f5-47e0-b87b-01b8ca03b17d' class='xr-var-data-in' type='checkbox'><label for='data-3ffa2ba5-76f5-47e0-b87b-01b8ca03b17d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([  0,   1,   2, ..., 497, 498, 499])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-c4c55323-bb04-4a8b-bdc0-21f0def6373b' class='xr-section-summary-in' type='checkbox'  checked><label for='section-c4c55323-bb04-4a8b-bdc0-21f0def6373b' class='xr-section-summary' >Data variables: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>y</span></div><div class='xr-var-dims'>(date, sample)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>131.9 105.5 103.5 ... 161.0 180.4</div><input id='attrs-a161b7ff-925b-4d2b-9ad2-62b7cca44347' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-a161b7ff-925b-4d2b-9ad2-62b7cca44347' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-9cd4e3af-243c-4f1a-b990-35f03ad6b144' class='xr-var-data-in' type='checkbox'><label for='data-9cd4e3af-243c-4f1a-b990-35f03ad6b144' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[131.91448803, 105.48324202, 103.46936371, ..., 111.08330861,\n        120.64949053, 119.24914395],\n       [102.31189451, 104.77320871, 106.56881149, ..., 118.56191508,\n        105.98643643, 104.40286925],\n       [124.9743477 , 114.13128865, 109.5771704 , ..., 125.34752935,\n        112.80284479, 132.02217832],\n       ...,\n       [172.7146628 , 147.56052265, 147.55021946, ..., 177.89765496,\n        135.30087497, 196.16500847],\n       [154.93325463, 172.71180959, 150.57659304, ..., 155.80314995,\n        149.07630071, 176.34741791],\n       [163.34552929, 160.17851386, 143.32108194, ..., 155.42560497,\n        160.96418232, 180.40773038]])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-bef359b0-64dd-441f-b17b-3106f936dcf6' class='xr-section-summary-in' type='checkbox'  ><label for='section-bef359b0-64dd-441f-b17b-3106f936dcf6' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>date</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-8bada3f0-7041-4645-89b7-17cc446d2bb1' class='xr-index-data-in' type='checkbox'/><label for='index-8bada3f0-7041-4645-89b7-17cc446d2bb1' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(DatetimeIndex([&#x27;2020-01-01&#x27;, &#x27;2020-01-02&#x27;, &#x27;2020-01-03&#x27;, &#x27;2020-01-04&#x27;,\n               &#x27;2020-01-05&#x27;, &#x27;2020-01-06&#x27;, &#x27;2020-01-07&#x27;, &#x27;2020-01-08&#x27;,\n               &#x27;2020-01-09&#x27;, &#x27;2020-01-10&#x27;,\n               ...\n               &#x27;2022-05-19&#x27;, &#x27;2022-05-20&#x27;, &#x27;2022-05-21&#x27;, &#x27;2022-05-22&#x27;,\n               &#x27;2022-05-23&#x27;, &#x27;2022-05-24&#x27;, &#x27;2022-05-25&#x27;, &#x27;2022-05-26&#x27;,\n               &#x27;2022-05-27&#x27;, &#x27;2022-05-28&#x27;],\n              dtype=&#x27;datetime64[ns]&#x27;, name=&#x27;date&#x27;, length=879, freq=None))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>sample<br>chain<br>draw</div></div><div class='xr-index-preview'>PandasMultiIndex</div><input type='checkbox' disabled/><label></label><input id='index-43a51aba-5181-43d3-9ae2-a637be622d49' class='xr-index-data-in' type='checkbox'/><label for='index-43a51aba-5181-43d3-9ae2-a637be622d49' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(MultiIndex([(0,   0),\n            (0,   1),\n            (0,   2),\n            (0,   3),\n            (0,   4),\n            (0,   5),\n            (0,   6),\n            (0,   7),\n            (0,   8),\n            (0,   9),\n            ...\n            (3, 490),\n            (3, 491),\n            (3, 492),\n            (3, 493),\n            (3, 494),\n            (3, 495),\n            (3, 496),\n            (3, 497),\n            (3, 498),\n            (3, 499)],\n           name=&#x27;sample&#x27;, length=2000))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-70192cd0-1b70-4857-845e-9c49f2187632' class='xr-section-summary-in' type='checkbox'  checked><label for='section-70192cd0-1b70-4857-845e-9c49f2187632' class='xr-section-summary' >Attributes: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>created_at :</span></dt><dd>2025-08-23T18:17:10.308861+00:00</dd><dt><span>arviz_version :</span></dt><dd>0.21.0</dd><dt><span>inference_library :</span></dt><dd>pymc</dd><dt><span>inference_library_version :</span></dt><dd>5.25.1</dd></dl></div></li></ul></div></div>\n```\n:::\n:::\n\n\nWe are happy with our model, we don't get any divergencies, and the sampling looks good.\n\n::: {#eca78542 .cell execution_count=17}\n``` {.python .cell-code}\n# Number of diverging samples\nprint(\n    f\"Total divergencies: {non_causal_mmm.idata['sample_stats']['diverging'].sum().item()}\"\n)\n\naz.summary(\n    data=non_causal_mmm.fit_result,\n    var_names=[\n        \"intercept\",\n        \"y_sigma\",\n        \"saturation_alpha\",\n        \"saturation_lam\",\n        \"adstock_alpha\",\n    ],\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTotal divergencies: 3\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=17}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>mean</th>\n      <th>sd</th>\n      <th>hdi_3%</th>\n      <th>hdi_97%</th>\n      <th>mcse_mean</th>\n      <th>mcse_sd</th>\n      <th>ess_bulk</th>\n      <th>ess_tail</th>\n      <th>r_hat</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>intercept</th>\n      <td>0.556</td>\n      <td>0.011</td>\n      <td>0.536</td>\n      <td>0.576</td>\n      <td>0.001</td>\n      <td>0.000</td>\n      <td>475.0</td>\n      <td>524.0</td>\n      <td>1.00</td>\n    </tr>\n    <tr>\n      <th>y_sigma</th>\n      <td>0.072</td>\n      <td>0.002</td>\n      <td>0.069</td>\n      <td>0.076</td>\n      <td>0.000</td>\n      <td>0.000</td>\n      <td>2375.0</td>\n      <td>1498.0</td>\n      <td>1.00</td>\n    </tr>\n    <tr>\n      <th>saturation_alpha[impressions_x1]</th>\n      <td>0.020</td>\n      <td>0.022</td>\n      <td>0.000</td>\n      <td>0.059</td>\n      <td>0.000</td>\n      <td>0.001</td>\n      <td>1176.0</td>\n      <td>863.0</td>\n      <td>1.00</td>\n    </tr>\n    <tr>\n      <th>saturation_alpha[impressions_x2]</th>\n      <td>0.017</td>\n      <td>0.018</td>\n      <td>0.000</td>\n      <td>0.048</td>\n      <td>0.000</td>\n      <td>0.001</td>\n      <td>1541.0</td>\n      <td>1227.0</td>\n      <td>1.00</td>\n    </tr>\n    <tr>\n      <th>saturation_alpha[impressions_x3]</th>\n      <td>0.032</td>\n      <td>0.036</td>\n      <td>0.000</td>\n      <td>0.099</td>\n      <td>0.001</td>\n      <td>0.001</td>\n      <td>562.0</td>\n      <td>685.0</td>\n      <td>1.01</td>\n    </tr>\n    <tr>\n      <th>saturation_alpha[impressions_x4]</th>\n      <td>0.026</td>\n      <td>0.017</td>\n      <td>0.000</td>\n      <td>0.056</td>\n      <td>0.001</td>\n      <td>0.001</td>\n      <td>707.0</td>\n      <td>576.0</td>\n      <td>1.00</td>\n    </tr>\n    <tr>\n      <th>saturation_lam[impressions_x1]</th>\n      <td>2.375</td>\n      <td>1.139</td>\n      <td>0.511</td>\n      <td>4.538</td>\n      <td>0.024</td>\n      <td>0.025</td>\n      <td>1951.0</td>\n      <td>1372.0</td>\n      <td>1.00</td>\n    </tr>\n    <tr>\n      <th>saturation_lam[impressions_x2]</th>\n      <td>2.378</td>\n      <td>1.111</td>\n      <td>0.560</td>\n      <td>4.410</td>\n      <td>0.021</td>\n      <td>0.027</td>\n      <td>2534.0</td>\n      <td>1239.0</td>\n      <td>1.00</td>\n    </tr>\n    <tr>\n      <th>saturation_lam[impressions_x3]</th>\n      <td>2.237</td>\n      <td>1.112</td>\n      <td>0.469</td>\n      <td>4.331</td>\n      <td>0.025</td>\n      <td>0.029</td>\n      <td>1504.0</td>\n      <td>838.0</td>\n      <td>1.00</td>\n    </tr>\n    <tr>\n      <th>saturation_lam[impressions_x4]</th>\n      <td>2.131</td>\n      <td>1.036</td>\n      <td>0.531</td>\n      <td>4.073</td>\n      <td>0.023</td>\n      <td>0.027</td>\n      <td>1925.0</td>\n      <td>1188.0</td>\n      <td>1.00</td>\n    </tr>\n    <tr>\n      <th>adstock_alpha[impressions_x1]</th>\n      <td>0.523</td>\n      <td>0.310</td>\n      <td>0.051</td>\n      <td>0.999</td>\n      <td>0.006</td>\n      <td>0.004</td>\n      <td>2714.0</td>\n      <td>1381.0</td>\n      <td>1.00</td>\n    </tr>\n    <tr>\n      <th>adstock_alpha[impressions_x2]</th>\n      <td>0.516</td>\n      <td>0.292</td>\n      <td>0.049</td>\n      <td>0.988</td>\n      <td>0.006</td>\n      <td>0.005</td>\n      <td>2431.0</td>\n      <td>1099.0</td>\n      <td>1.01</td>\n    </tr>\n    <tr>\n      <th>adstock_alpha[impressions_x3]</th>\n      <td>0.737</td>\n      <td>0.260</td>\n      <td>0.194</td>\n      <td>1.000</td>\n      <td>0.008</td>\n      <td>0.005</td>\n      <td>986.0</td>\n      <td>1334.0</td>\n      <td>1.00</td>\n    </tr>\n    <tr>\n      <th>adstock_alpha[impressions_x4]</th>\n      <td>0.513</td>\n      <td>0.249</td>\n      <td>0.090</td>\n      <td>0.972</td>\n      <td>0.006</td>\n      <td>0.005</td>\n      <td>1687.0</td>\n      <td>1139.0</td>\n      <td>1.00</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nIf our model has a correct understanding of causality, we can use it to perform a do-calculus to estimate the effect of our channel, using out of sample (sampling from the posterior). Mathematically, we want to compute the causal effect as the difference between two interventions: $$P(Y|do(X=x)) - P(Y|do(X=0))$$\n\nThis should allows us to isolate the causal impact of our marketing channels on the outcome variable.\n\n::: {#233c4672 .cell execution_count=18}\n``` {.python .cell-code}\nX_test_x2_zero = X_test.copy()\nX_test_x2_zero[\"impressions_x2\"].iloc[:100] = 0\n\ny_do_x2_zero = non_causal_mmm.sample_posterior_predictive(\n    X_test_x2_zero, extend_idata=False, include_last_observations=True, random_seed=42\n)\n\ny_do_x2 = non_causal_mmm.sample_posterior_predictive(\n    X_test, extend_idata=False, include_last_observations=True, random_seed=42\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSampling: [y]\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<script type=\"application/vnd.jupyter.widget-view+json\">\n{\"model_id\":\"b351d5a5ef1a4bc98340fe4b5828b512\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n</script>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSampling: [y]\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<script type=\"application/vnd.jupyter.widget-view+json\">\n{\"model_id\":\"fe5decef0e764110b805107b3a04b9ff\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n</script>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n```\n:::\n:::\n\n\nNow that we have both posteriors, we can compute the difference between the period with the index 880-890 and plot the causal effect and the cumulative causal effect.\n\n::: {#bbba9a14 .cell execution_count=19}\n``` {.python .cell-code}\n# Calculate the causal effect as the difference between interventions\nx2_causal_effect = (y_do_x2_zero - y_do_x2).y\n# Get dates from the coordinates for x-axis\ndates = x2_causal_effect.coords['date'].values[:100]  # Take only first 100 days\n\n# Plot the causal effect\nplt.subplot(1, 2, 1)\n# Calculate mean and quantiles\nmean_effect = x2_causal_effect.mean(dim=\"sample\")[:100]\nplt.plot(dates, mean_effect)\nplt.title(\"Causal Effect of Channel X2\", fontsize=6)\nplt.xlabel(\"Date\", fontsize=6)\nplt.ylabel(\"Effect\", fontsize=6)\nplt.tick_params(axis='both', which='major', labelsize=4)\nplt.legend(fontsize=6)\n\n# Plot the cumulative causal effect\nplt.subplot(1, 2, 2)\n# For cumulative effect, compute quantiles directly from cumulative sums\ncum_effect = x2_causal_effect.cumsum(dim=\"date\")\ncum_mean = cum_effect.mean(dim=\"sample\")[:100]\nplt.plot(dates, cum_mean)\nplt.title(\"Cumulative Causal Effect of Channel X2\", fontsize=6)\nplt.xlabel(\"Date\", fontsize=6)\nplt.ylabel(\"Cumulative Effect\", fontsize=6)\nplt.tick_params(axis='both', which='major', labelsize=4)\nplt.legend(fontsize=6)\nplt.tight_layout()\n```\n\n::: {.cell-output .cell-output-display}\n![](nomore_experiments_without_causality_files/figure-html/cell-20-output-1.png){width=788 height=387}\n:::\n:::\n\n\nIn reality, in order to validate the following estimated effect, we'll need to run an actual experiment. Because we did the data generation process we can run this actual experiment to compare.\n\n::: {#4465e227 .cell execution_count=20}\n``` {.python .cell-code}\n# Create an intervened spend_x2 with zeros between index 880 and 980\nintervened_spend_x2 = pz_spend_x2.copy()\nintervened_spend_x2[880:980] = 0\n\n# Evaluate target variable with the intervention\nnp_target_var_x2_zero = target_var.eval({\n    \"spend_x4\": pz_spend_x4,\n    \"spend_x3\": pz_spend_x3,\n    \"spend_x2\": intervened_spend_x2,\n    \"spend_x1\": pz_spend_x1,\n    \"event_signal\": event_signal[:-1],\n    \"alpha_event_x2\": pz_alpha_event_x2,\n    \"alpha_event_x3\": pz_alpha_event_x3,\n    \"alpha_x1_x3\": pz_alpha_x1_x3,\n    \"alpha_x2_x3\": pz_alpha_x2_x3,\n    \"alpha_x2_x4\": pz_alpha_x2_x4,\n    \"beta_x2\": pz_beta_x2,\n    \"beta_x3\": pz_beta_x3,\n    \"beta_x4\": pz_beta_x4,\n    \"beta_x1\": pz_beta_x1,\n    \"saturation_lam_x2\": .5,\n    \"saturation_alpha_x2\": .2,\n    \"saturation_lam_x3\": .7,\n    \"saturation_alpha_x3\": .7,\n    \"saturation_lam_x4\": .2,\n    \"saturation_alpha_x4\": .1,\n    \"global_adstock_alpha\": .2,\n    \"product_price\": pz_product_price,\n    \"event_contributions\": np_event_contributions[:-1],\n    \"product_price_alpha\": product_price_alpha_value,\n    \"product_price_lam\": product_price_lam_value,\n    \"trend\": np_trend,\n    \"global_noise\": pz_global_noise,\n})\n\n# x2 total effect y | do(x2=>1) - y | do(x2=0)\nx2_intervention_real_effect = np_target_var_x2_zero - np_target_var\nx2_intervention_real_cumulative_effect = np.cumsum(x2_intervention_real_effect)\n\n# Plot both the intervention effect and cumulative effect\nplt.subplot(1, 2, 1)\n# Plot the daily effect\ndaily_effect = x2_intervention_real_effect[880:980] * scaler_factor_for_all\nplt.plot(dates, daily_effect)\nplt.title(\"Causal Effect of Channel X2\", fontsize=6)\nplt.xlabel(\"Date\", fontsize=6)\nplt.ylabel(\"Effect\", fontsize=6)\nplt.tick_params(axis='both', which='major', labelsize=4)\nplt.legend(fontsize=6)\n\n# Plot the cumulative causal effect\nplt.subplot(1, 2, 2)\ncumulative_effect = x2_intervention_real_cumulative_effect[880:980] * scaler_factor_for_all\nplt.plot(dates, cumulative_effect)\nplt.title(\"Cumulative Causal Effect of Channel X2\", fontsize=6)\nplt.xlabel(\"Date\", fontsize=6)\nplt.ylabel(\"Cumulative Effect\", fontsize=6)\nplt.tick_params(axis='both', which='major', labelsize=4)\nplt.legend(fontsize=6)\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](nomore_experiments_without_causality_files/figure-html/cell-21-output-1.png){width=788 height=387}\n:::\n:::\n\n\nHow does compare to the recovered effect? Let's observe! 👀\n\n::: {#a472a9bb .cell execution_count=21}\n``` {.python .cell-code}\n# Create a figure to compare real effects with estimated effects\n# Plot 1: Compare daily effects\nplt.subplot(2, 1, 1)\nplt.plot(dates, daily_effect, label='Real Effect', color='blue')\nplt.plot(dates, mean_effect, label='Estimated Effect', color='red', linestyle='--')\nplt.title(\"Comparison of Real vs Estimated Causal Effects of Channel X2\", fontsize=10)\nplt.xlabel(\"Date\", fontsize=8)\nplt.ylabel(\"Daily Effect\", fontsize=8)\nplt.tick_params(axis='both', which='major', labelsize=6)\nplt.legend(fontsize=8)\nplt.grid(True, alpha=0.3)\n\n# Plot 2: Compare cumulative effects\nplt.subplot(2, 1, 2)\nplt.plot(dates, cumulative_effect, label='Real Cumulative Effect', color='blue')\nplt.plot(dates, cum_mean, \n         label='Estimated Cumulative Effect', color='red', linestyle='--')\nplt.title(\"Comparison of Real vs Estimated Cumulative Causal Effects of Channel X2\", fontsize=10)\nplt.xlabel(\"Date\", fontsize=8)\nplt.ylabel(\"Cumulative Effect\", fontsize=8)\nplt.tick_params(axis='both', which='major', labelsize=6)\nplt.legend(fontsize=8)\nplt.grid(True, alpha=0.3)\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](nomore_experiments_without_causality_files/figure-html/cell-22-output-1.png){width=791 height=390}\n:::\n:::\n\n\nThe initial model have been under estimating the effect of $X2$. We can see the model was thinking we'll loosing almost none users when in reality wi'll loose around 600 in total. Maybe we did something wrong? Are we maybe the wrong causal question?\n\nThat doesn't matter, we have calibration! 🤪\n\nLets compute the observable delta in Y and observable delta in X and use it for calibration.\n\n::: {#71f3843f .cell execution_count=22}\n``` {.python .cell-code}\nintervened_channel = \"impressions_x2\"\ntotal_observed_effect = cumulative_effect[-1] # delta Y\ntotal_previous_imp_before_intervention = X_train[intervened_channel].iloc[-100:].sum()\ntotal_change_imp_during_intervention = -X_train[intervened_channel].iloc[-100:].sum()\nsigma = 0.3 # confidence in the experiment.\n\ndf_lift_test = pd.DataFrame(\n    [{\n        \"channel\": intervened_channel,\n        \"x\": total_previous_imp_before_intervention,\n        \"delta_x\": total_change_imp_during_intervention,\n        \"delta_y\": total_observed_effect,\n        \"sigma\": sigma,\n    }]\n)\n\nintervened_data = data.copy()\nintervened_data.loc[880:980, \"impressions_x2\"] = 0\n\nnon_causal_mmm2 = MMM(\n    date_column=\"date\",\n    channel_columns=channel_columns,\n    control_columns=control_columns,\n    adstock=adstock,\n    saturation=saturation,\n    model_config=model_config,\n    sampler_config=sample_kwargs\n)\nnon_causal_mmm2.build_model(\n    intervened_data.drop(columns=[\"target_var\"]), \n    intervened_data[\"target_var\"]\n)\n\nnon_causal_mmm2.add_lift_test_measurements(df_lift_test)\nnon_causal_mmm2.model.to_graphviz()\n```\n\n::: {.cell-output .cell-output-display execution_count=22}\n![](nomore_experiments_without_causality_files/figure-html/cell-23-output-1.svg){}\n:::\n:::\n\n\nAs we can see a new observational point have been added to our data. This new point must be satisfied as the rest of our data, pooling parameter into a new direction.\n\n::: {.callout-note}\nIn a Bayesian model, each observation—whether it is a daily data point $y_t$ or a lift measurement $\\Delta y$—contributes a term to the likelihood. The posterior arises from the product of all these likelihood terms and the prior(s). In other words, theres no actual difference between priors and data, they both carry the same weight and multiply in the numerator of Bayes theorem. There's no discrete \"decision\" about which part of the data (or which prior) to weight more; it all goes into the same log‐posterior function. The sampling or optimization algorithm (MCMC, variational inference, etc.) explores the parameter space in proportion to the posterior probability (which is prior × likelihood). Whichever parameters jointly give higher posterior density get visited more often by the sampler.\n:::\n\n::: {#9bf1adc2 .cell execution_count=23}\n``` {.python .cell-code}\nnon_causal_mmm2.fit(\n    intervened_data.drop(columns=[\"target_var\"]), \n    intervened_data[\"target_var\"],\n)\nnon_causal_mmm2.sample_posterior_predictive(\n    intervened_data.drop(columns=[\"target_var\"]), \n    extend_idata=True, \n    combined=True\n)\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n<style>\n    :root {\n        --column-width-1: 40%; /* Progress column width */\n        --column-width-2: 15%; /* Chain column width */\n        --column-width-3: 15%; /* Divergences column width */\n        --column-width-4: 15%; /* Step Size column width */\n        --column-width-5: 15%; /* Gradients/Draw column width */\n    }\n\n    .nutpie {\n        max-width: 800px;\n        margin: 10px auto;\n        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        //color: #333;\n        //background-color: #fff;\n        padding: 10px;\n        box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n        border-radius: 8px;\n        font-size: 14px; /* Smaller font size for a more compact look */\n    }\n    .nutpie table {\n        width: 100%;\n        border-collapse: collapse; /* Remove any extra space between borders */\n    }\n    .nutpie th, .nutpie td {\n        padding: 8px 10px; /* Reduce padding to make table more compact */\n        text-align: left;\n        border-bottom: 1px solid #888;\n    }\n    .nutpie th {\n        //background-color: #f0f0f0;\n    }\n\n    .nutpie th:nth-child(1) { width: var(--column-width-1); }\n    .nutpie th:nth-child(2) { width: var(--column-width-2); }\n    .nutpie th:nth-child(3) { width: var(--column-width-3); }\n    .nutpie th:nth-child(4) { width: var(--column-width-4); }\n    .nutpie th:nth-child(5) { width: var(--column-width-5); }\n\n    .nutpie progress {\n        width: 100%;\n        height: 15px; /* Smaller progress bars */\n        border-radius: 5px;\n    }\n    progress::-webkit-progress-bar {\n        background-color: #eee;\n        border-radius: 5px;\n    }\n    progress::-webkit-progress-value {\n        background-color: #5cb85c;\n        border-radius: 5px;\n    }\n    progress::-moz-progress-bar {\n        background-color: #5cb85c;\n        border-radius: 5px;\n    }\n    .nutpie .progress-cell {\n        width: 100%;\n    }\n\n    .nutpie p strong { font-size: 16px; font-weight: bold; }\n\n    @media (prefers-color-scheme: dark) {\n        .nutpie {\n            //color: #ddd;\n            //background-color: #1e1e1e;\n            box-shadow: 0 4px 6px rgba(0,0,0,0.2);\n        }\n        .nutpie table, .nutpie th, .nutpie td {\n            border-color: #555;\n            color: #ccc;\n        }\n        .nutpie th {\n            background-color: #2a2a2a;\n        }\n        .nutpie progress::-webkit-progress-bar {\n            background-color: #444;\n        }\n        .nutpie progress::-webkit-progress-value {\n            background-color: #3178c6;\n        }\n        .nutpie progress::-moz-progress-bar {\n            background-color: #3178c6;\n        }\n    }\n</style>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n<div class=\"nutpie\">\n    <p><strong>Sampler Progress</strong></p>\n    <p>Total Chains: <span id=\"total-chains\">4</span></p>\n    <p>Active Chains: <span id=\"active-chains\">0</span></p>\n    <p>\n        Finished Chains:\n        <span id=\"active-chains\">4</span>\n    </p>\n    <p>Sampling for now</p>\n    <p>\n        Estimated Time to Completion:\n        <span id=\"eta\">now</span>\n    </p>\n\n    <progress\n        id=\"total-progress-bar\"\n        max=\"6000\"\n        value=\"6000\">\n    </progress>\n    <table>\n        <thead>\n            <tr>\n                <th>Progress</th>\n                <th>Draws</th>\n                <th>Divergences</th>\n                <th>Step Size</th>\n                <th>Gradients/Draw</th>\n            </tr>\n        </thead>\n        <tbody id=\"chain-details\">\n            \n                <tr>\n                    <td class=\"progress-cell\">\n                        <progress\n                            max=\"1500\"\n                            value=\"1500\">\n                        </progress>\n                    </td>\n                    <td>1500</td>\n                    <td>0</td>\n                    <td>0.23</td>\n                    <td>15</td>\n                </tr>\n            \n                <tr>\n                    <td class=\"progress-cell\">\n                        <progress\n                            max=\"1500\"\n                            value=\"1500\">\n                        </progress>\n                    </td>\n                    <td>1500</td>\n                    <td>0</td>\n                    <td>0.24</td>\n                    <td>15</td>\n                </tr>\n            \n                <tr>\n                    <td class=\"progress-cell\">\n                        <progress\n                            max=\"1500\"\n                            value=\"1500\">\n                        </progress>\n                    </td>\n                    <td>1500</td>\n                    <td>0</td>\n                    <td>0.23</td>\n                    <td>15</td>\n                </tr>\n            \n                <tr>\n                    <td class=\"progress-cell\">\n                        <progress\n                            max=\"1500\"\n                            value=\"1500\">\n                        </progress>\n                    </td>\n                    <td>1500</td>\n                    <td>0</td>\n                    <td>0.23</td>\n                    <td>15</td>\n                </tr>\n            \n            </tr>\n        </tbody>\n    </table>\n</div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<script type=\"application/vnd.jupyter.widget-view+json\">\n{\"model_id\":\"ad94a7e06b16464392c71772bf5dcfc7\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n</script>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSampling: [lift_measurements, y]\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<script type=\"application/vnd.jupyter.widget-view+json\">\n{\"model_id\":\"07e6b68851ee455da379c8fd4e79cfc7\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n</script>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=23}\n```{=html}\n<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n *\n */\n\n:root {\n  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n  --xr-background-color: var(--jp-layout-color0, white);\n  --xr-background-color-row-even: var(--jp-layout-color1, white);\n  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n}\n\nhtml[theme=\"dark\"],\nhtml[data-theme=\"dark\"],\nbody[data-theme=\"dark\"],\nbody.vscode-dark {\n  --xr-font-color0: rgba(255, 255, 255, 1);\n  --xr-font-color2: rgba(255, 255, 255, 0.54);\n  --xr-font-color3: rgba(255, 255, 255, 0.38);\n  --xr-border-color: #1f1f1f;\n  --xr-disabled-color: #515151;\n  --xr-background-color: #111111;\n  --xr-background-color-row-even: #111111;\n  --xr-background-color-row-odd: #313131;\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-array-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: inline-block;\n  opacity: 0;\n  height: 0;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:focus + label {\n  border: 2px solid var(--xr-font-color0);\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: \"►\";\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: \"▼\";\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: \"(\";\n}\n\n.xr-dim-list:after {\n  content: \")\";\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: \",\";\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  margin-bottom: 0;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  background-color: var(--xr-background-color) !important;\n  padding-bottom: 5px !important;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 17MB\nDimensions:                  (lift_measurements_dim_0: 1, sample: 2000,\n                              date: 1050)\nCoordinates:\n  * lift_measurements_dim_0  (lift_measurements_dim_0) int64 8B 0\n  * date                     (date) datetime64[ns] 8kB 2020-01-01 ... 2022-11-15\n  * sample                   (sample) object 16kB MultiIndex\n  * chain                    (sample) int64 16kB 0 0 0 0 0 0 0 ... 3 3 3 3 3 3 3\n  * draw                     (sample) int64 16kB 0 1 2 3 4 ... 496 497 498 499\nData variables:\n    lift_measurements        (lift_measurements_dim_0, sample) float64 16kB 0...\n    y                        (date, sample) float64 17MB 105.8 124.5 ... 154.0\nAttributes:\n    created_at:                 2025-08-23T18:17:30.529531+00:00\n    arviz_version:              0.21.0\n    inference_library:          pymc\n    inference_library_version:  5.25.1</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-d6fe11f3-ab3e-4daa-bac4-b66865733346' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-d6fe11f3-ab3e-4daa-bac4-b66865733346' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>lift_measurements_dim_0</span>: 1</li><li><span class='xr-has-index'>sample</span>: 2000</li><li><span class='xr-has-index'>date</span>: 1050</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-117a06f5-1525-478a-a66a-2b6874ea8ec8' class='xr-section-summary-in' type='checkbox'  checked><label for='section-117a06f5-1525-478a-a66a-2b6874ea8ec8' class='xr-section-summary' >Coordinates: <span>(5)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lift_measurements_dim_0</span></div><div class='xr-var-dims'>(lift_measurements_dim_0)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>0</div><input id='attrs-2eb5a7cd-5bef-4a88-a395-a09087f6e8ac' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-2eb5a7cd-5bef-4a88-a395-a09087f6e8ac' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-e6b3aea6-1ebd-4278-b78b-209b2b71890f' class='xr-var-data-in' type='checkbox'><label for='data-e6b3aea6-1ebd-4278-b78b-209b2b71890f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([0])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>date</span></div><div class='xr-var-dims'>(date)</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>2020-01-01 ... 2022-11-15</div><input id='attrs-bcd1a6cb-2b96-4b7a-83e6-3faf94dd5a32' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-bcd1a6cb-2b96-4b7a-83e6-3faf94dd5a32' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b5bb30cf-443c-47fc-87d9-d204a62f1a25' class='xr-var-data-in' type='checkbox'><label for='data-b5bb30cf-443c-47fc-87d9-d204a62f1a25' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;2020-01-01T00:00:00.000000000&#x27;, &#x27;2020-01-02T00:00:00.000000000&#x27;,\n       &#x27;2020-01-03T00:00:00.000000000&#x27;, ..., &#x27;2022-11-13T00:00:00.000000000&#x27;,\n       &#x27;2022-11-14T00:00:00.000000000&#x27;, &#x27;2022-11-15T00:00:00.000000000&#x27;],\n      dtype=&#x27;datetime64[ns]&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>sample</span></div><div class='xr-var-dims'>(sample)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>MultiIndex</div><input id='attrs-2045e537-2d26-4896-95b1-d682f41e9d24' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-2045e537-2d26-4896-95b1-d682f41e9d24' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-98ea7e92-9a23-418e-b39b-f320714d6219' class='xr-var-data-in' type='checkbox'><label for='data-98ea7e92-9a23-418e-b39b-f320714d6219' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([(0, 0), (0, 1), (0, 2), ..., (3, 497), (3, 498), (3, 499)], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>chain</span></div><div class='xr-var-dims'>(sample)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>0 0 0 0 0 0 0 0 ... 3 3 3 3 3 3 3 3</div><input id='attrs-7b6f1313-2f6f-4caf-9ce8-a626ccbab675' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-7b6f1313-2f6f-4caf-9ce8-a626ccbab675' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a1b95d46-e33e-4a84-84dc-45f2178037fb' class='xr-var-data-in' type='checkbox'><label for='data-a1b95d46-e33e-4a84-84dc-45f2178037fb' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([0, 0, 0, ..., 3, 3, 3])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>draw</span></div><div class='xr-var-dims'>(sample)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>0 1 2 3 4 5 ... 495 496 497 498 499</div><input id='attrs-65f73713-85f7-4e0c-87bc-e4c4aa54dcf0' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-65f73713-85f7-4e0c-87bc-e4c4aa54dcf0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a9eb9b7e-4921-403e-b57f-8b2537bb4ba8' class='xr-var-data-in' type='checkbox'><label for='data-a9eb9b7e-4921-403e-b57f-8b2537bb4ba8' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([  0,   1,   2, ..., 497, 498, 499])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-209fdc1c-7294-4901-9d7e-3ecde6c2d7ff' class='xr-section-summary-in' type='checkbox'  checked><label for='section-209fdc1c-7294-4901-9d7e-3ecde6c2d7ff' class='xr-section-summary' >Data variables: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>lift_measurements</span></div><div class='xr-var-dims'>(lift_measurements_dim_0, sample)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.0 0.0 0.0 ... 0.0 0.0 0.0 0.0</div><input id='attrs-f98fbe72-8350-40b2-90a3-83dac0221650' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-f98fbe72-8350-40b2-90a3-83dac0221650' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-e7679f02-be2d-4a39-825a-d9f78fc7bf65' class='xr-var-data-in' type='checkbox'><label for='data-e7679f02-be2d-4a39-825a-d9f78fc7bf65' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[0., 0., 0., ..., 0., 0., 0.]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>y</span></div><div class='xr-var-dims'>(date, sample)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>105.8 124.5 134.3 ... 166.7 154.0</div><input id='attrs-8366546c-3dbe-422f-825e-93bd6dc235ca' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-8366546c-3dbe-422f-825e-93bd6dc235ca' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a5284775-06ec-41ae-b9dc-9b3632f64024' class='xr-var-data-in' type='checkbox'><label for='data-a5284775-06ec-41ae-b9dc-9b3632f64024' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[105.83320017, 124.5136466 , 134.28774743, ..., 106.65966162,\n        125.2896336 , 104.51183208],\n       [114.16599266, 101.31359545,  82.27286556, ..., 110.43661822,\n         90.45485339, 132.02291708],\n       [116.28774828, 107.15382769, 102.88584596, ..., 101.31231557,\n        128.42768936, 101.92656373],\n       ...,\n       [154.2963066 , 161.00740192, 152.97905881, ..., 165.70130142,\n        154.67044193, 190.94815515],\n       [196.20356056, 187.17718867, 193.1216704 , ..., 146.76338205,\n        169.56518865, 188.72401479],\n       [175.47451293, 166.18509199, 168.93009343, ..., 160.80365887,\n        166.73698636, 154.04115882]])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-6b4a0056-61ef-4386-b335-763b220678ad' class='xr-section-summary-in' type='checkbox'  ><label for='section-6b4a0056-61ef-4386-b335-763b220678ad' class='xr-section-summary' >Indexes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>lift_measurements_dim_0</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-3ef82633-0f41-4017-ae8e-f7f7a6be0c1e' class='xr-index-data-in' type='checkbox'/><label for='index-3ef82633-0f41-4017-ae8e-f7f7a6be0c1e' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([0], dtype=&#x27;int64&#x27;, name=&#x27;lift_measurements_dim_0&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>date</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-292d4366-ad98-4f59-8526-1ef0049b32a9' class='xr-index-data-in' type='checkbox'/><label for='index-292d4366-ad98-4f59-8526-1ef0049b32a9' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(DatetimeIndex([&#x27;2020-01-01&#x27;, &#x27;2020-01-02&#x27;, &#x27;2020-01-03&#x27;, &#x27;2020-01-04&#x27;,\n               &#x27;2020-01-05&#x27;, &#x27;2020-01-06&#x27;, &#x27;2020-01-07&#x27;, &#x27;2020-01-08&#x27;,\n               &#x27;2020-01-09&#x27;, &#x27;2020-01-10&#x27;,\n               ...\n               &#x27;2022-11-06&#x27;, &#x27;2022-11-07&#x27;, &#x27;2022-11-08&#x27;, &#x27;2022-11-09&#x27;,\n               &#x27;2022-11-10&#x27;, &#x27;2022-11-11&#x27;, &#x27;2022-11-12&#x27;, &#x27;2022-11-13&#x27;,\n               &#x27;2022-11-14&#x27;, &#x27;2022-11-15&#x27;],\n              dtype=&#x27;datetime64[ns]&#x27;, name=&#x27;date&#x27;, length=1050, freq=None))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>sample<br>chain<br>draw</div></div><div class='xr-index-preview'>PandasMultiIndex</div><input type='checkbox' disabled/><label></label><input id='index-dc027c2b-8f37-4655-8a54-36db6c921521' class='xr-index-data-in' type='checkbox'/><label for='index-dc027c2b-8f37-4655-8a54-36db6c921521' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(MultiIndex([(0,   0),\n            (0,   1),\n            (0,   2),\n            (0,   3),\n            (0,   4),\n            (0,   5),\n            (0,   6),\n            (0,   7),\n            (0,   8),\n            (0,   9),\n            ...\n            (3, 490),\n            (3, 491),\n            (3, 492),\n            (3, 493),\n            (3, 494),\n            (3, 495),\n            (3, 496),\n            (3, 497),\n            (3, 498),\n            (3, 499)],\n           name=&#x27;sample&#x27;, length=2000))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-da69ef11-ad66-47d9-b529-2c5d062c3bb7' class='xr-section-summary-in' type='checkbox'  checked><label for='section-da69ef11-ad66-47d9-b529-2c5d062c3bb7' class='xr-section-summary' >Attributes: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>created_at :</span></dt><dd>2025-08-23T18:17:30.529531+00:00</dd><dt><span>arviz_version :</span></dt><dd>0.21.0</dd><dt><span>inference_library :</span></dt><dd>pymc</dd><dt><span>inference_library_version :</span></dt><dd>5.25.1</dd></dl></div></li></ul></div></div>\n```\n:::\n:::\n\n\nNow that our model is ready, we can check the new estimated effect.\n\n::: {#811856b2 .cell execution_count=24}\n``` {.python .cell-code}\ny_do_x2_zero_second_model = non_causal_mmm2.idata.posterior_predictive.copy()\ny_do_x2_second_model = non_causal_mmm2.sample_posterior_predictive(\n    data.drop(columns=[\"target_var\"]), \n    extend_idata=False, \n    include_last_observations=False, \n    combined=False,\n    random_seed=42\n)\n# Calculate the causal effect as the difference between interventions\nx2_causal_effect_second_model = (y_do_x2_zero_second_model.y - y_do_x2_second_model.y).isel(date=slice(880, 980))\n\n# Plot the causal effect\nplt.subplot(1, 2, 1)\n# Calculate mean and quantiles\nmean_effect_second_model = x2_causal_effect_second_model.mean(dim=[\"chain\",\"draw\"])\nplt.plot(x2_causal_effect_second_model.coords[\"date\"].values, mean_effect_second_model)\nplt.title(\"Causal Effect of Channel X2\", fontsize=6)\nplt.xlabel(\"Date\", fontsize=6)\nplt.ylabel(\"Effect\", fontsize=6)\nplt.tick_params(axis='both', which='major', labelsize=4)\nplt.legend(fontsize=6)\n\n# Plot the cumulative causal effect\nplt.subplot(1, 2, 2)\n# For cumulative effect, compute quantiles directly from cumulative sums\ncum_effect_second_model = x2_causal_effect_second_model.cumsum(dim=\"date\")\ncum_mean_second_model = cum_effect_second_model.mean(dim=[\"chain\",\"draw\"])\nplt.plot(x2_causal_effect_second_model.coords[\"date\"].values, cum_mean_second_model)\nplt.title(\"Cumulative Causal Effect of Channel X2\", fontsize=6)\nplt.xlabel(\"Date\", fontsize=6)\nplt.ylabel(\"Cumulative Effect\", fontsize=6)\nplt.tick_params(axis='both', which='major', labelsize=4)\nplt.legend(fontsize=6)\nplt.tight_layout()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSampling: [lift_measurements, y]\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<script type=\"application/vnd.jupyter.widget-view+json\">\n{\"model_id\":\"49adb1cea06548c29da86c9e65127803\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n</script>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](nomore_experiments_without_causality_files/figure-html/cell-25-output-4.png){width=788 height=387}\n:::\n:::\n\n\nAs you can see the effect looks fully different. The size is 1000X higher than before. Let's compare!\n\n::: {#ee574fdc .cell execution_count=25}\n``` {.python .cell-code}\n# Create a figure to compare real effects with estimated effects\n# Plot 1: Compare daily effects\nplt.subplot(2, 1, 1)\nplt.plot(dates, daily_effect, label='Real Effect', color='blue')\nplt.plot(dates, mean_effect, label='Estimated Effect', color='red', linestyle='--')\nplt.plot(x2_causal_effect_second_model.coords[\"date\"].values, mean_effect_second_model, label='Estimated Effect (2)', color='orange', linestyle='--')\nplt.title(\"Comparison of Real vs Estimated Causal Effects of Channel X2\", fontsize=10)\nplt.xlabel(\"Date\", fontsize=8)\nplt.ylabel(\"Daily Effect\", fontsize=8)\nplt.tick_params(axis='both', which='major', labelsize=6)\nplt.legend(fontsize=8)\nplt.grid(True, alpha=0.3)\n\n# Plot 2: Compare cumulative effects\nplt.subplot(2, 1, 2)\nplt.plot(dates, cumulative_effect, label='Real Cumulative Effect', color='blue')\nplt.plot(dates, cum_mean, \n         label='Estimated Cumulative Effect', color='red', linestyle='--')\nplt.plot(x2_causal_effect_second_model.coords[\"date\"].values, cum_mean_second_model, \n         label='Estimated Cumulative Effect (2)', color='orange', linestyle='--')\nplt.title(\"Comparison of Real vs Estimated Cumulative Causal Effects of Channel X2\", fontsize=10)\nplt.xlabel(\"Date\", fontsize=8)\nplt.ylabel(\"Cumulative Effect\", fontsize=8)\nplt.tick_params(axis='both', which='major', labelsize=6)\nplt.legend(fontsize=8)\nplt.grid(True, alpha=0.3)\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](nomore_experiments_without_causality_files/figure-html/cell-26-output-1.png){width=791 height=390}\n:::\n:::\n\n\nAs expected the new observation makes the model add more credit to X2 but this came with the price of an overestimation of the true impact. Meanwhile, it was true that X2 impact was bigger than the original one, the second model absorbe all the variability possibly explain by other variables such as X1, X3 and bring a 1000X more extra impact, with a very tight posterior.\n\n::: {#eaa3766c .cell execution_count=26}\n``` {.python .cell-code}\n# plot the recovered mean daily contribution as distribution.\nchannels_contribution_original_scale_model1 = non_causal_mmm.compute_channel_contribution_original_scale()\n\nchannels_contribution_original_scale_model2 = non_causal_mmm2.compute_channel_contribution_original_scale()\n\n_dist1 = channels_contribution_original_scale_model1.isel(date=slice(0, 800)).mean(\n    dim=[\"date\"]\n).sel(channel=\"impressions_x2\").values.flatten()\n\n_dist2 = channels_contribution_original_scale_model2.isel(date=slice(0, 800)).mean(\n    dim=[\"date\"]\n).sel(channel=\"impressions_x2\").values.flatten()\n\n\n# First subplot for Model 1\nplt.subplot(1, 2, 1)\nsns.kdeplot(_dist1, shade=True, label=\"Model 1\", bw_adjust=4.5)\nplt.title(\"Distribution of Channel X2 Contribution - Model 1\", fontsize=12)\nplt.xlabel(\"Contribution Value\", fontsize=10)\nplt.ylabel(\"Density\", fontsize=10)\nplt.grid(True, alpha=0.3)\nplt.legend(fontsize=9)\n\n# Second subplot for Model 2\nplt.subplot(1, 2, 2)\nsns.kdeplot(_dist2, shade=True, label=\"Model 2\", bw_adjust=4.5, color=\"orange\")\nplt.title(\"Distribution of Channel X2 Contribution - Model 2\", fontsize=12)\nplt.xlabel(\"Contribution Value\", fontsize=10)\nplt.ylabel(\"Density\", fontsize=10)\nplt.grid(True, alpha=0.3)\nplt.legend(fontsize=9)\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](nomore_experiments_without_causality_files/figure-html/cell-27-output-1.png){width=826 height=389}\n:::\n:::\n\n\n::: {.callout-warning}\n## The Danger of Tight Posteriors\n\nIt's important to note that a tight posterior distribution (like we see in Model 2) should never be understood as the model being more correct or certain about the true causal effect. This is a common misconception in Bayesian analysis.\n\nA tight posterior simply means the model is very confident in its estimates given the data and prior assumptions it has, but says nothing about whether those assumptions are correct. In this case, the addition of the lift test measurement has created a model that is very confident in an incorrect answer.\n\nThis illustrates an important principle in causal inference and Bayesian modeling: **precision is not the same as accuracy**. A model can be precisely wrong - having a narrow posterior around an incorrect value. This often happens when:\n\n1. The model structure doesn't match the true causal process\n2. Important confounders are omitted\n3. The priors or likelihood are misspecified\n:::\n\n\nWhy all the following happened? lets take a look to the graph.\n\n::: {#bb8390fb .cell execution_count=27}\n``` {.python .cell-code}\ndot\n```\n\n::: {.cell-output .cell-output-display execution_count=27}\n![](nomore_experiments_without_causality_files/figure-html/cell-28-output-1.svg){}\n:::\n:::\n\n\nThis DAG shows:\n\n1. **Direct Spend-to-Impression Relationships**: Each spend variable (X1-X4) directly influences its corresponding impression variable.\n\n2. **Cross-Channel Effects**: \n   - Impressions from X1 influence impressions from X3\n   - Impressions from X2 influence both X3 and X4 impressions\n   - Events influence impressions for X2 and X3\n\nIf we were to build a naive regression model including all variables (X1, X2, X3, X4), we would encounter significant estimation problems, particularly for X2. According to Pearl's causal theory.\n\n### 1. Collider Bias\n\nIn our graph, X2 influences X3 and X4, which both influence the target variable. This creates a collider structure where conditioning on x1 variable because induces a spurious correlation between X2, X3. This violates the independence assumptions of standard regression.\n\n### 2. Mediator Effects\n\nX2 has both direct effects on the target variable and indirect effects through X3 and X4. A naive regression would conflate these paths, leading to inconsistent estimates of X2's true total causal effect.\n\n### 3. Confounding from Events\n\nEvents influence both X2 impressions and the target variable directly. Without properly accounting for this common cause, the estimate for X2 will capture some of the effect that actually comes from events.\n\nAll the above means, in order to estimate the effect of X2 we need to address the primal causal questions.\n\n### 4. Minimal Adjustment Set for X2\n\nTo estimate the total causal effect of X2 on the target variable, we need to identify the minimal adjustment set that blocks all non-causal paths while preserving the causal paths. According to Pearl's backdoor criterion, we must control for any confounders (common causes) while avoiding adjusting for colliders or mediators. In our DAG, the minimal adjustment set for estimating X2's total effect would include Events (as it's a confounder affecting both X2 and the target) and Spend X1 (as it influences the target through X3, creating a backdoor path). We should not adjust for impressions_x3 or impressions_x4, as these are mediators through which X2 partially exerts its effect on the target variable. Nevertheless, events are a cofounder of X2, meaning, we need to control for them if we want to get the estimates right on spot.\n\nThe proper identification of this minimal adjustment set is crucial for unbiased estimation. If we control for too few variables, confounding bias remains. If we control for mediators, we block part of the causal effect we're trying to measure. This highlights why structural causal models are superior to naive regression approaches - they allow us to explicitly model the causal pathways and make appropriate adjustments based on causal reasoning rather than statistical correlation. By conditioning only on the minimal adjustment set, we can obtain a consistent estimate of X2's total causal effect, including both its direct impact and indirect effects through other channels.\n\nSo, let's see what happen if we apply causal theory 😃\n\n::: {#d1267224 .cell execution_count=28}\n``` {.python .cell-code}\n# Lets rebuild our media mix model\ncausal_mmm = MMM(\n    date_column=\"date\",\n    channel_columns=[\"impressions_x2\"],\n    control_columns=control_columns,\n    adstock=adstock,\n    saturation=saturation,\n    model_config=model_config,\n    sampler_config=sample_kwargs\n)\ncausal_mmm.fit(X_train, y_train,)\ncausal_mmm.sample_posterior_predictive(X_train, extend_idata=True, combined=True)\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n<style>\n    :root {\n        --column-width-1: 40%; /* Progress column width */\n        --column-width-2: 15%; /* Chain column width */\n        --column-width-3: 15%; /* Divergences column width */\n        --column-width-4: 15%; /* Step Size column width */\n        --column-width-5: 15%; /* Gradients/Draw column width */\n    }\n\n    .nutpie {\n        max-width: 800px;\n        margin: 10px auto;\n        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        //color: #333;\n        //background-color: #fff;\n        padding: 10px;\n        box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n        border-radius: 8px;\n        font-size: 14px; /* Smaller font size for a more compact look */\n    }\n    .nutpie table {\n        width: 100%;\n        border-collapse: collapse; /* Remove any extra space between borders */\n    }\n    .nutpie th, .nutpie td {\n        padding: 8px 10px; /* Reduce padding to make table more compact */\n        text-align: left;\n        border-bottom: 1px solid #888;\n    }\n    .nutpie th {\n        //background-color: #f0f0f0;\n    }\n\n    .nutpie th:nth-child(1) { width: var(--column-width-1); }\n    .nutpie th:nth-child(2) { width: var(--column-width-2); }\n    .nutpie th:nth-child(3) { width: var(--column-width-3); }\n    .nutpie th:nth-child(4) { width: var(--column-width-4); }\n    .nutpie th:nth-child(5) { width: var(--column-width-5); }\n\n    .nutpie progress {\n        width: 100%;\n        height: 15px; /* Smaller progress bars */\n        border-radius: 5px;\n    }\n    progress::-webkit-progress-bar {\n        background-color: #eee;\n        border-radius: 5px;\n    }\n    progress::-webkit-progress-value {\n        background-color: #5cb85c;\n        border-radius: 5px;\n    }\n    progress::-moz-progress-bar {\n        background-color: #5cb85c;\n        border-radius: 5px;\n    }\n    .nutpie .progress-cell {\n        width: 100%;\n    }\n\n    .nutpie p strong { font-size: 16px; font-weight: bold; }\n\n    @media (prefers-color-scheme: dark) {\n        .nutpie {\n            //color: #ddd;\n            //background-color: #1e1e1e;\n            box-shadow: 0 4px 6px rgba(0,0,0,0.2);\n        }\n        .nutpie table, .nutpie th, .nutpie td {\n            border-color: #555;\n            color: #ccc;\n        }\n        .nutpie th {\n            background-color: #2a2a2a;\n        }\n        .nutpie progress::-webkit-progress-bar {\n            background-color: #444;\n        }\n        .nutpie progress::-webkit-progress-value {\n            background-color: #3178c6;\n        }\n        .nutpie progress::-moz-progress-bar {\n            background-color: #3178c6;\n        }\n    }\n</style>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n<div class=\"nutpie\">\n    <p><strong>Sampler Progress</strong></p>\n    <p>Total Chains: <span id=\"total-chains\">4</span></p>\n    <p>Active Chains: <span id=\"active-chains\">0</span></p>\n    <p>\n        Finished Chains:\n        <span id=\"active-chains\">4</span>\n    </p>\n    <p>Sampling for now</p>\n    <p>\n        Estimated Time to Completion:\n        <span id=\"eta\">now</span>\n    </p>\n\n    <progress\n        id=\"total-progress-bar\"\n        max=\"6000\"\n        value=\"6000\">\n    </progress>\n    <table>\n        <thead>\n            <tr>\n                <th>Progress</th>\n                <th>Draws</th>\n                <th>Divergences</th>\n                <th>Step Size</th>\n                <th>Gradients/Draw</th>\n            </tr>\n        </thead>\n        <tbody id=\"chain-details\">\n            \n                <tr>\n                    <td class=\"progress-cell\">\n                        <progress\n                            max=\"1500\"\n                            value=\"1500\">\n                        </progress>\n                    </td>\n                    <td>1500</td>\n                    <td>0</td>\n                    <td>0.21</td>\n                    <td>15</td>\n                </tr>\n            \n                <tr>\n                    <td class=\"progress-cell\">\n                        <progress\n                            max=\"1500\"\n                            value=\"1500\">\n                        </progress>\n                    </td>\n                    <td>1500</td>\n                    <td>0</td>\n                    <td>0.20</td>\n                    <td>15</td>\n                </tr>\n            \n                <tr>\n                    <td class=\"progress-cell\">\n                        <progress\n                            max=\"1500\"\n                            value=\"1500\">\n                        </progress>\n                    </td>\n                    <td>1500</td>\n                    <td>0</td>\n                    <td>0.19</td>\n                    <td>15</td>\n                </tr>\n            \n                <tr>\n                    <td class=\"progress-cell\">\n                        <progress\n                            max=\"1500\"\n                            value=\"1500\">\n                        </progress>\n                    </td>\n                    <td>1500</td>\n                    <td>0</td>\n                    <td>0.22</td>\n                    <td>15</td>\n                </tr>\n            \n            </tr>\n        </tbody>\n    </table>\n</div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<script type=\"application/vnd.jupyter.widget-view+json\">\n{\"model_id\":\"ad2b8d8662eb41a79c748390c934e691\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n</script>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSampling: [y]\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<script type=\"application/vnd.jupyter.widget-view+json\">\n{\"model_id\":\"73515d31f1634e49ab4a677b600f67e9\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n</script>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=28}\n```{=html}\n<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n *\n */\n\n:root {\n  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n  --xr-background-color: var(--jp-layout-color0, white);\n  --xr-background-color-row-even: var(--jp-layout-color1, white);\n  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n}\n\nhtml[theme=\"dark\"],\nhtml[data-theme=\"dark\"],\nbody[data-theme=\"dark\"],\nbody.vscode-dark {\n  --xr-font-color0: rgba(255, 255, 255, 1);\n  --xr-font-color2: rgba(255, 255, 255, 0.54);\n  --xr-font-color3: rgba(255, 255, 255, 0.38);\n  --xr-border-color: #1f1f1f;\n  --xr-disabled-color: #515151;\n  --xr-background-color: #111111;\n  --xr-background-color-row-even: #111111;\n  --xr-background-color-row-odd: #313131;\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-array-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: inline-block;\n  opacity: 0;\n  height: 0;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:focus + label {\n  border: 2px solid var(--xr-font-color0);\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: \"►\";\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: \"▼\";\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: \"(\";\n}\n\n.xr-dim-list:after {\n  content: \")\";\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: \",\";\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  margin-bottom: 0;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  background-color: var(--xr-background-color) !important;\n  padding-bottom: 5px !important;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 14MB\nDimensions:  (date: 879, sample: 2000)\nCoordinates:\n  * date     (date) datetime64[ns] 7kB 2020-01-01 2020-01-02 ... 2022-05-28\n  * sample   (sample) object 16kB MultiIndex\n  * chain    (sample) int64 16kB 0 0 0 0 0 0 0 0 0 0 0 ... 3 3 3 3 3 3 3 3 3 3 3\n  * draw     (sample) int64 16kB 0 1 2 3 4 5 6 7 ... 493 494 495 496 497 498 499\nData variables:\n    y        (date, sample) float64 14MB 126.6 120.8 132.6 ... 121.2 138.9 129.0\nAttributes:\n    created_at:                 2025-08-23T18:17:46.747752+00:00\n    arviz_version:              0.21.0\n    inference_library:          pymc\n    inference_library_version:  5.25.1</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-e3814abc-1985-410a-8505-f3983713fac0' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-e3814abc-1985-410a-8505-f3983713fac0' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>date</span>: 879</li><li><span class='xr-has-index'>sample</span>: 2000</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-e6f2b27f-2c9f-4a64-97df-10a2285e7a91' class='xr-section-summary-in' type='checkbox'  checked><label for='section-e6f2b27f-2c9f-4a64-97df-10a2285e7a91' class='xr-section-summary' >Coordinates: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>date</span></div><div class='xr-var-dims'>(date)</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>2020-01-01 ... 2022-05-28</div><input id='attrs-9a94b782-104b-4ee3-a77b-22e6bd141daa' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-9a94b782-104b-4ee3-a77b-22e6bd141daa' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-306a02b2-5f03-4a83-bba6-d51115f759a2' class='xr-var-data-in' type='checkbox'><label for='data-306a02b2-5f03-4a83-bba6-d51115f759a2' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;2020-01-01T00:00:00.000000000&#x27;, &#x27;2020-01-02T00:00:00.000000000&#x27;,\n       &#x27;2020-01-03T00:00:00.000000000&#x27;, ..., &#x27;2022-05-26T00:00:00.000000000&#x27;,\n       &#x27;2022-05-27T00:00:00.000000000&#x27;, &#x27;2022-05-28T00:00:00.000000000&#x27;],\n      dtype=&#x27;datetime64[ns]&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>sample</span></div><div class='xr-var-dims'>(sample)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>MultiIndex</div><input id='attrs-1dc9b02e-e0fd-432b-972c-42e415afe609' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-1dc9b02e-e0fd-432b-972c-42e415afe609' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b83df9a8-b640-4d1b-b0e4-2d590683e874' class='xr-var-data-in' type='checkbox'><label for='data-b83df9a8-b640-4d1b-b0e4-2d590683e874' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([(0, 0), (0, 1), (0, 2), ..., (3, 497), (3, 498), (3, 499)], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>chain</span></div><div class='xr-var-dims'>(sample)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>0 0 0 0 0 0 0 0 ... 3 3 3 3 3 3 3 3</div><input id='attrs-2b5120c5-42c3-4361-87ac-3c53f7bded7c' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-2b5120c5-42c3-4361-87ac-3c53f7bded7c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-589e2564-cd7d-4459-a0ef-b2827575f2e9' class='xr-var-data-in' type='checkbox'><label for='data-589e2564-cd7d-4459-a0ef-b2827575f2e9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([0, 0, 0, ..., 3, 3, 3])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>draw</span></div><div class='xr-var-dims'>(sample)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>0 1 2 3 4 5 ... 495 496 497 498 499</div><input id='attrs-bf8fcb1b-0a7c-4b7b-bc24-5c9b2debdfd7' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-bf8fcb1b-0a7c-4b7b-bc24-5c9b2debdfd7' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1d760f1b-1dcb-4b30-9d17-677b1ebac1c9' class='xr-var-data-in' type='checkbox'><label for='data-1d760f1b-1dcb-4b30-9d17-677b1ebac1c9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([  0,   1,   2, ..., 497, 498, 499])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-51f80d42-69f9-4900-9c43-561224800439' class='xr-section-summary-in' type='checkbox'  checked><label for='section-51f80d42-69f9-4900-9c43-561224800439' class='xr-section-summary' >Data variables: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>y</span></div><div class='xr-var-dims'>(date, sample)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>126.6 120.8 132.6 ... 138.9 129.0</div><input id='attrs-eaba54b0-f052-4308-bf7d-621155988220' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-eaba54b0-f052-4308-bf7d-621155988220' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-9853ecc1-cbee-4f8b-afa5-07e87f501db8' class='xr-var-data-in' type='checkbox'><label for='data-9853ecc1-cbee-4f8b-afa5-07e87f501db8' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[126.63417586, 120.77713327, 132.62154515, ..., 135.03929856,\n        120.76759897, 102.9150371 ],\n       [105.5559785 , 111.22984233, 102.02381687, ..., 109.64228159,\n        115.32787859, 124.31263549],\n       [109.82227923, 108.32629931, 123.65029601, ..., 112.88999504,\n        110.42951382, 129.85484046],\n       ...,\n       [171.17987271, 155.16560565, 167.20117405, ..., 151.73481714,\n        180.52042083, 144.38259374],\n       [155.86166197, 161.60370485, 146.71344159, ..., 154.90375597,\n        151.1426002 , 122.82695986],\n       [130.28648726, 137.95633566, 176.40028939, ..., 121.16595743,\n        138.91405584, 128.97247841]])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-1f7017bc-cfa3-4116-a43d-f690d2adf6d4' class='xr-section-summary-in' type='checkbox'  ><label for='section-1f7017bc-cfa3-4116-a43d-f690d2adf6d4' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>date</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-7d6db50d-66f8-42a6-8978-4b764cadfa6c' class='xr-index-data-in' type='checkbox'/><label for='index-7d6db50d-66f8-42a6-8978-4b764cadfa6c' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(DatetimeIndex([&#x27;2020-01-01&#x27;, &#x27;2020-01-02&#x27;, &#x27;2020-01-03&#x27;, &#x27;2020-01-04&#x27;,\n               &#x27;2020-01-05&#x27;, &#x27;2020-01-06&#x27;, &#x27;2020-01-07&#x27;, &#x27;2020-01-08&#x27;,\n               &#x27;2020-01-09&#x27;, &#x27;2020-01-10&#x27;,\n               ...\n               &#x27;2022-05-19&#x27;, &#x27;2022-05-20&#x27;, &#x27;2022-05-21&#x27;, &#x27;2022-05-22&#x27;,\n               &#x27;2022-05-23&#x27;, &#x27;2022-05-24&#x27;, &#x27;2022-05-25&#x27;, &#x27;2022-05-26&#x27;,\n               &#x27;2022-05-27&#x27;, &#x27;2022-05-28&#x27;],\n              dtype=&#x27;datetime64[ns]&#x27;, name=&#x27;date&#x27;, length=879, freq=None))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>sample<br>chain<br>draw</div></div><div class='xr-index-preview'>PandasMultiIndex</div><input type='checkbox' disabled/><label></label><input id='index-7d6087a8-875d-4ecd-a536-14cb338a23d3' class='xr-index-data-in' type='checkbox'/><label for='index-7d6087a8-875d-4ecd-a536-14cb338a23d3' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(MultiIndex([(0,   0),\n            (0,   1),\n            (0,   2),\n            (0,   3),\n            (0,   4),\n            (0,   5),\n            (0,   6),\n            (0,   7),\n            (0,   8),\n            (0,   9),\n            ...\n            (3, 490),\n            (3, 491),\n            (3, 492),\n            (3, 493),\n            (3, 494),\n            (3, 495),\n            (3, 496),\n            (3, 497),\n            (3, 498),\n            (3, 499)],\n           name=&#x27;sample&#x27;, length=2000))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-8cff352b-3aa1-4a04-a569-794922308c1b' class='xr-section-summary-in' type='checkbox'  checked><label for='section-8cff352b-3aa1-4a04-a569-794922308c1b' class='xr-section-summary' >Attributes: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>created_at :</span></dt><dd>2025-08-23T18:17:46.747752+00:00</dd><dt><span>arviz_version :</span></dt><dd>0.21.0</dd><dt><span>inference_library :</span></dt><dd>pymc</dd><dt><span>inference_library_version :</span></dt><dd>5.25.1</dd></dl></div></li></ul></div></div>\n```\n:::\n:::\n\n\nNow, lets repeat again the estimation of the effect when X2 is zero.\n\n::: {#a503c273 .cell execution_count=29}\n``` {.python .cell-code}\nX_test_x2_zero = X_test.copy()\nX_test_x2_zero[\"impressions_x2\"].iloc[:100] = 0\n\ny_do_x2_zero_causal = causal_mmm.sample_posterior_predictive(\n    X_test_x2_zero, extend_idata=False, include_last_observations=True, random_seed=42\n)\n\ny_do_x2_causal = causal_mmm.sample_posterior_predictive(\n    X_test, extend_idata=False, include_last_observations=True, random_seed=42\n)\n# Calculate the causal effect as the difference between interventions\nx2_causal_effect_causal = (y_do_x2_zero_causal - y_do_x2_causal).y\n# Get dates from the coordinates for x-axis\ndates = x2_causal_effect_causal.coords['date'].values[:100]  # Take only first 100 days\n\n# Calculate mean and quantiles\nmean_effect = x2_causal_effect_causal.mean(dim=\"sample\")[:100]\ncum_effect = x2_causal_effect_causal.cumsum(dim=\"date\")\ncum_mean = cum_effect.mean(dim=\"sample\")[:100]\n\n# Plot 1: Compare daily effects\nplt.subplot(2, 1, 1)\nplt.plot(dates, daily_effect, label='Real Effect', color='blue')\nplt.plot(dates, mean_effect, label='Estimated Effect', color='red', linestyle='--')\nplt.title(\"Comparison of Real vs Estimated Causal Effects of Channel X2\", fontsize=10)\nplt.xlabel(\"Date\", fontsize=8)\nplt.ylabel(\"Daily Effect\", fontsize=8)\nplt.tick_params(axis='both', which='major', labelsize=6)\nplt.legend(fontsize=8)\nplt.grid(True, alpha=0.3)\n\n# Plot 2: Compare cumulative effects\nplt.subplot(2, 1, 2)\nplt.plot(dates, cumulative_effect, label='Real Cumulative Effect', color='blue')\nplt.plot(dates, cum_mean, \n         label='Estimated Cumulative Effect', color='red', linestyle='--')\nplt.title(\"Comparison of Real vs Estimated Cumulative Causal Effects of Channel X2\", fontsize=10)\nplt.xlabel(\"Date\", fontsize=8)\nplt.ylabel(\"Cumulative Effect\", fontsize=8)\nplt.tick_params(axis='both', which='major', labelsize=6)\nplt.legend(fontsize=8)\nplt.grid(True, alpha=0.3)\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSampling: [y]\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<script type=\"application/vnd.jupyter.widget-view+json\">\n{\"model_id\":\"50db2020fa3248dcada7a45c2bbe23c8\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n</script>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSampling: [y]\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<script type=\"application/vnd.jupyter.widget-view+json\">\n{\"model_id\":\"38e4bb2ef9cc43719eed0f0152ee08b8\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n</script>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](nomore_experiments_without_causality_files/figure-html/cell-30-output-7.png){width=791 height=390}\n:::\n:::\n\n\nGreat, as expected the true causal effect for X2 was recovered, and its possible to prove with an experiment. This just prove that maths are not magic, and that if we want to create models that explain the dynamics of the world, we need to use causal reasoning to it 🔥🙌🏻\n\n# Conclusion\n\nThe evidence is clear: calibration cannot rescue a misspecified causal model. We've seen that:\n\n* **Causal misspecification persists despite calibration.** Our Model 2 became confidently wrong after calibration—tight posteriors around incorrect values.\n* **Colliders and mediators matter.** Standard MMMs ignore that marketing channels influence each other, creating spurious correlations that no amount of experimental data can fix.\n* **Adjustment sets are crucial.** Simply including every variable yields biased estimates; we must control only for confounders while preserving causal pathways.\n\nWhen we finally built a causally-aware MMM—controlling for events as confounders but avoiding adjustment for mediators—our estimates matched the ground truth. The same experimental evidence that couldn't rescue our misspecified model perfectly aligned with our correctly specified one.\n\nThe message: invest in causal discovery before calibration. Draw your DAGs. Identify your minimal adjustment sets. No amount of experimental evidence will save a model asking the wrong causal question.\n\nAs Pearl might say: statistics tells us *what* the data says; causality tells us *what* to do with it.\n\nCalibration without causation is just computation without comprehension!\n\n::: {#53699d61 .cell execution_count=30}\n``` {.python .cell-code}\n%load_ext watermark\n%watermark -n -u -v -iv -w -p pymc_marketing,pytensor\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLast updated: Sat Aug 23 2025\n\nPython implementation: CPython\nPython version       : 3.11.8\nIPython version      : 8.30.0\n\npymc_marketing: 0.15.1\npytensor      : 2.31.7\n\nnumpy         : 2.1.3\ngraphviz      : 0.20.3\npymc          : 5.25.1\narviz         : 0.21.0\nmatplotlib    : 3.10.1\npreliz        : 0.20.0\npytensor      : 2.31.7\npymc_marketing: 0.15.1\npandas        : 2.2.3\nIPython       : 8.30.0\nseaborn       : 0.13.2\n\nWatermark: 2.5.0\n\n```\n:::\n:::\n\n\n",
    "supporting": [
      "nomore_experiments_without_causality_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n<script src=\"https://unpkg.com/@jupyter-widgets/html-manager@*/dist/embed-amd.js\" crossorigin=\"anonymous\"></script>\n"
      ],
      "include-after-body": [
        "<script type=application/vnd.jupyter.widget-state+json>\n{\"state\":{\"0094c0e4b5c44bbbb4efe74f50f8d2c3\":{\"model_module\":\"@jupyter-widgets/base\",\"model_module_version\":\"2.0.0\",\"model_name\":\"LayoutModel\",\"state\":{\"_model_module\":\"@jupyter-widgets/base\",\"_model_module_version\":\"2.0.0\",\"_model_name\":\"LayoutModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/base\",\"_view_module_version\":\"2.0.0\",\"_view_name\":\"LayoutView\",\"align_content\":null,\"align_items\":null,\"align_self\":null,\"border_bottom\":null,\"border_left\":null,\"border_right\":null,\"border_top\":null,\"bottom\":null,\"display\":null,\"flex\":null,\"flex_flow\":null,\"grid_area\":null,\"grid_auto_columns\":null,\"grid_auto_flow\":null,\"grid_auto_rows\":null,\"grid_column\":null,\"grid_gap\":null,\"grid_row\":null,\"grid_template_areas\":null,\"grid_template_columns\":null,\"grid_template_rows\":null,\"height\":null,\"justify_content\":null,\"justify_items\":null,\"left\":null,\"margin\":null,\"max_height\":null,\"max_width\":null,\"min_height\":null,\"min_width\":null,\"object_fit\":null,\"object_position\":null,\"order\":null,\"overflow\":null,\"padding\":null,\"right\":null,\"top\":null,\"visibility\":null,\"width\":null}},\"07e6b68851ee455da379c8fd4e79cfc7\":{\"model_module\":\"@jupyter-widgets/output\",\"model_module_version\":\"1.0.0\",\"model_name\":\"OutputModel\",\"state\":{\"_dom_classes\":[],\"_model_module\":\"@jupyter-widgets/output\",\"_model_module_version\":\"1.0.0\",\"_model_name\":\"OutputModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/output\",\"_view_module_version\":\"1.0.0\",\"_view_name\":\"OutputView\",\"layout\":\"IPY_MODEL_ff9820d24a564479a04b7b5349a36fd2\",\"msg_id\":\"\",\"outputs\":[{\"data\":{\"text/html\":\"<pre style=\\\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\\\">Sampling ... <span style=\\\"color: #008000; text-decoration-color: #008000\\\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\\\"color: #800080; text-decoration-color: #800080\\\">100%</span> 0:00:00 / 0:00:00\\n</pre>\\n\",\"text/plain\":\"Sampling ... \\u001b[32m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\\u001b[0m \\u001b[35m100%\\u001b[0m 0:00:00 / 0:00:00\\n\"},\"metadata\":{},\"output_type\":\"display_data\"}],\"tabbable\":null,\"tooltip\":null}},\"38e4bb2ef9cc43719eed0f0152ee08b8\":{\"model_module\":\"@jupyter-widgets/output\",\"model_module_version\":\"1.0.0\",\"model_name\":\"OutputModel\",\"state\":{\"_dom_classes\":[],\"_model_module\":\"@jupyter-widgets/output\",\"_model_module_version\":\"1.0.0\",\"_model_name\":\"OutputModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/output\",\"_view_module_version\":\"1.0.0\",\"_view_name\":\"OutputView\",\"layout\":\"IPY_MODEL_786b6ae6e60d4cd1b5fe0053b7356456\",\"msg_id\":\"\",\"outputs\":[{\"data\":{\"text/html\":\"<pre style=\\\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\\\">Sampling ... <span style=\\\"color: #008000; text-decoration-color: #008000\\\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\\\"color: #800080; text-decoration-color: #800080\\\">100%</span> 0:00:00 / 0:00:00\\n</pre>\\n\",\"text/plain\":\"Sampling ... \\u001b[32m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\\u001b[0m \\u001b[35m100%\\u001b[0m 0:00:00 / 0:00:00\\n\"},\"metadata\":{},\"output_type\":\"display_data\"}],\"tabbable\":null,\"tooltip\":null}},\"4762d4fe81c0457ca9a0674e06599376\":{\"model_module\":\"@jupyter-widgets/output\",\"model_module_version\":\"1.0.0\",\"model_name\":\"OutputModel\",\"state\":{\"_dom_classes\":[],\"_model_module\":\"@jupyter-widgets/output\",\"_model_module_version\":\"1.0.0\",\"_model_name\":\"OutputModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/output\",\"_view_module_version\":\"1.0.0\",\"_view_name\":\"OutputView\",\"layout\":\"IPY_MODEL_acc01864292f4d158adc2d11f235ff32\",\"msg_id\":\"\",\"outputs\":[{\"data\":{\"text/html\":\"<pre style=\\\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\\\">Computing ... <span style=\\\"color: #008000; text-decoration-color: #008000\\\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\\\"color: #800080; text-decoration-color: #800080\\\">100%</span> 0:00:00\\n</pre>\\n\",\"text/plain\":\"Computing ... \\u001b[32m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\\u001b[0m \\u001b[35m100%\\u001b[0m 0:00:00\\n\"},\"metadata\":{},\"output_type\":\"display_data\"}],\"tabbable\":null,\"tooltip\":null}},\"49adb1cea06548c29da86c9e65127803\":{\"model_module\":\"@jupyter-widgets/output\",\"model_module_version\":\"1.0.0\",\"model_name\":\"OutputModel\",\"state\":{\"_dom_classes\":[],\"_model_module\":\"@jupyter-widgets/output\",\"_model_module_version\":\"1.0.0\",\"_model_name\":\"OutputModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/output\",\"_view_module_version\":\"1.0.0\",\"_view_name\":\"OutputView\",\"layout\":\"IPY_MODEL_78626a7fa2174326aadddfdc012d7354\",\"msg_id\":\"\",\"outputs\":[{\"data\":{\"text/html\":\"<pre style=\\\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\\\">Sampling ... <span style=\\\"color: #008000; text-decoration-color: #008000\\\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\\\"color: #800080; text-decoration-color: #800080\\\">100%</span> 0:00:00 / 0:00:00\\n</pre>\\n\",\"text/plain\":\"Sampling ... \\u001b[32m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\\u001b[0m \\u001b[35m100%\\u001b[0m 0:00:00 / 0:00:00\\n\"},\"metadata\":{},\"output_type\":\"display_data\"}],\"tabbable\":null,\"tooltip\":null}},\"4d10e73519c948279000f134483c9083\":{\"model_module\":\"@jupyter-widgets/output\",\"model_module_version\":\"1.0.0\",\"model_name\":\"OutputModel\",\"state\":{\"_dom_classes\":[],\"_model_module\":\"@jupyter-widgets/output\",\"_model_module_version\":\"1.0.0\",\"_model_name\":\"OutputModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/output\",\"_view_module_version\":\"1.0.0\",\"_view_name\":\"OutputView\",\"layout\":\"IPY_MODEL_d21d110abbf142878d377066eea741a8\",\"msg_id\":\"\",\"outputs\":[{\"data\":{\"text/html\":\"<pre style=\\\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\\\">Sampling ... <span style=\\\"color: #008000; text-decoration-color: #008000\\\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\\\"color: #800080; text-decoration-color: #800080\\\">100%</span> 0:00:00 / 0:00:00\\n</pre>\\n\",\"text/plain\":\"Sampling ... \\u001b[32m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\\u001b[0m \\u001b[35m100%\\u001b[0m 0:00:00 / 0:00:00\\n\"},\"metadata\":{},\"output_type\":\"display_data\"}],\"tabbable\":null,\"tooltip\":null}},\"50db2020fa3248dcada7a45c2bbe23c8\":{\"model_module\":\"@jupyter-widgets/output\",\"model_module_version\":\"1.0.0\",\"model_name\":\"OutputModel\",\"state\":{\"_dom_classes\":[],\"_model_module\":\"@jupyter-widgets/output\",\"_model_module_version\":\"1.0.0\",\"_model_name\":\"OutputModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/output\",\"_view_module_version\":\"1.0.0\",\"_view_name\":\"OutputView\",\"layout\":\"IPY_MODEL_51e9031f94d74b66bfbb7d713bcfcc9b\",\"msg_id\":\"\",\"outputs\":[{\"data\":{\"text/html\":\"<pre style=\\\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\\\">Sampling ... <span style=\\\"color: #008000; text-decoration-color: #008000\\\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\\\"color: #800080; text-decoration-color: #800080\\\">100%</span> 0:00:00 / 0:00:00\\n</pre>\\n\",\"text/plain\":\"Sampling ... \\u001b[32m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\\u001b[0m \\u001b[35m100%\\u001b[0m 0:00:00 / 0:00:00\\n\"},\"metadata\":{},\"output_type\":\"display_data\"}],\"tabbable\":null,\"tooltip\":null}},\"51e9031f94d74b66bfbb7d713bcfcc9b\":{\"model_module\":\"@jupyter-widgets/base\",\"model_module_version\":\"2.0.0\",\"model_name\":\"LayoutModel\",\"state\":{\"_model_module\":\"@jupyter-widgets/base\",\"_model_module_version\":\"2.0.0\",\"_model_name\":\"LayoutModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/base\",\"_view_module_version\":\"2.0.0\",\"_view_name\":\"LayoutView\",\"align_content\":null,\"align_items\":null,\"align_self\":null,\"border_bottom\":null,\"border_left\":null,\"border_right\":null,\"border_top\":null,\"bottom\":null,\"display\":null,\"flex\":null,\"flex_flow\":null,\"grid_area\":null,\"grid_auto_columns\":null,\"grid_auto_flow\":null,\"grid_auto_rows\":null,\"grid_column\":null,\"grid_gap\":null,\"grid_row\":null,\"grid_template_areas\":null,\"grid_template_columns\":null,\"grid_template_rows\":null,\"height\":null,\"justify_content\":null,\"justify_items\":null,\"left\":null,\"margin\":null,\"max_height\":null,\"max_width\":null,\"min_height\":null,\"min_width\":null,\"object_fit\":null,\"object_position\":null,\"order\":null,\"overflow\":null,\"padding\":null,\"right\":null,\"top\":null,\"visibility\":null,\"width\":null}},\"57c55c844f9f4c14a9d605fcac917557\":{\"model_module\":\"@jupyter-widgets/base\",\"model_module_version\":\"2.0.0\",\"model_name\":\"LayoutModel\",\"state\":{\"_model_module\":\"@jupyter-widgets/base\",\"_model_module_version\":\"2.0.0\",\"_model_name\":\"LayoutModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/base\",\"_view_module_version\":\"2.0.0\",\"_view_name\":\"LayoutView\",\"align_content\":null,\"align_items\":null,\"align_self\":null,\"border_bottom\":null,\"border_left\":null,\"border_right\":null,\"border_top\":null,\"bottom\":null,\"display\":null,\"flex\":null,\"flex_flow\":null,\"grid_area\":null,\"grid_auto_columns\":null,\"grid_auto_flow\":null,\"grid_auto_rows\":null,\"grid_column\":null,\"grid_gap\":null,\"grid_row\":null,\"grid_template_areas\":null,\"grid_template_columns\":null,\"grid_template_rows\":null,\"height\":null,\"justify_content\":null,\"justify_items\":null,\"left\":null,\"margin\":null,\"max_height\":null,\"max_width\":null,\"min_height\":null,\"min_width\":null,\"object_fit\":null,\"object_position\":null,\"order\":null,\"overflow\":null,\"padding\":null,\"right\":null,\"top\":null,\"visibility\":null,\"width\":null}},\"65a3b78e8cb842bfa1c8be903d4660f0\":{\"model_module\":\"@jupyter-widgets/base\",\"model_module_version\":\"2.0.0\",\"model_name\":\"LayoutModel\",\"state\":{\"_model_module\":\"@jupyter-widgets/base\",\"_model_module_version\":\"2.0.0\",\"_model_name\":\"LayoutModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/base\",\"_view_module_version\":\"2.0.0\",\"_view_name\":\"LayoutView\",\"align_content\":null,\"align_items\":null,\"align_self\":null,\"border_bottom\":null,\"border_left\":null,\"border_right\":null,\"border_top\":null,\"bottom\":null,\"display\":null,\"flex\":null,\"flex_flow\":null,\"grid_area\":null,\"grid_auto_columns\":null,\"grid_auto_flow\":null,\"grid_auto_rows\":null,\"grid_column\":null,\"grid_gap\":null,\"grid_row\":null,\"grid_template_areas\":null,\"grid_template_columns\":null,\"grid_template_rows\":null,\"height\":null,\"justify_content\":null,\"justify_items\":null,\"left\":null,\"margin\":null,\"max_height\":null,\"max_width\":null,\"min_height\":null,\"min_width\":null,\"object_fit\":null,\"object_position\":null,\"order\":null,\"overflow\":null,\"padding\":null,\"right\":null,\"top\":null,\"visibility\":null,\"width\":null}},\"73515d31f1634e49ab4a677b600f67e9\":{\"model_module\":\"@jupyter-widgets/output\",\"model_module_version\":\"1.0.0\",\"model_name\":\"OutputModel\",\"state\":{\"_dom_classes\":[],\"_model_module\":\"@jupyter-widgets/output\",\"_model_module_version\":\"1.0.0\",\"_model_name\":\"OutputModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/output\",\"_view_module_version\":\"1.0.0\",\"_view_name\":\"OutputView\",\"layout\":\"IPY_MODEL_65a3b78e8cb842bfa1c8be903d4660f0\",\"msg_id\":\"\",\"outputs\":[{\"data\":{\"text/html\":\"<pre style=\\\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\\\">Sampling ... <span style=\\\"color: #008000; text-decoration-color: #008000\\\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\\\"color: #800080; text-decoration-color: #800080\\\">100%</span> 0:00:00 / 0:00:00\\n</pre>\\n\",\"text/plain\":\"Sampling ... \\u001b[32m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\\u001b[0m \\u001b[35m100%\\u001b[0m 0:00:00 / 0:00:00\\n\"},\"metadata\":{},\"output_type\":\"display_data\"}],\"tabbable\":null,\"tooltip\":null}},\"78626a7fa2174326aadddfdc012d7354\":{\"model_module\":\"@jupyter-widgets/base\",\"model_module_version\":\"2.0.0\",\"model_name\":\"LayoutModel\",\"state\":{\"_model_module\":\"@jupyter-widgets/base\",\"_model_module_version\":\"2.0.0\",\"_model_name\":\"LayoutModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/base\",\"_view_module_version\":\"2.0.0\",\"_view_name\":\"LayoutView\",\"align_content\":null,\"align_items\":null,\"align_self\":null,\"border_bottom\":null,\"border_left\":null,\"border_right\":null,\"border_top\":null,\"bottom\":null,\"display\":null,\"flex\":null,\"flex_flow\":null,\"grid_area\":null,\"grid_auto_columns\":null,\"grid_auto_flow\":null,\"grid_auto_rows\":null,\"grid_column\":null,\"grid_gap\":null,\"grid_row\":null,\"grid_template_areas\":null,\"grid_template_columns\":null,\"grid_template_rows\":null,\"height\":null,\"justify_content\":null,\"justify_items\":null,\"left\":null,\"margin\":null,\"max_height\":null,\"max_width\":null,\"min_height\":null,\"min_width\":null,\"object_fit\":null,\"object_position\":null,\"order\":null,\"overflow\":null,\"padding\":null,\"right\":null,\"top\":null,\"visibility\":null,\"width\":null}},\"786b6ae6e60d4cd1b5fe0053b7356456\":{\"model_module\":\"@jupyter-widgets/base\",\"model_module_version\":\"2.0.0\",\"model_name\":\"LayoutModel\",\"state\":{\"_model_module\":\"@jupyter-widgets/base\",\"_model_module_version\":\"2.0.0\",\"_model_name\":\"LayoutModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/base\",\"_view_module_version\":\"2.0.0\",\"_view_name\":\"LayoutView\",\"align_content\":null,\"align_items\":null,\"align_self\":null,\"border_bottom\":null,\"border_left\":null,\"border_right\":null,\"border_top\":null,\"bottom\":null,\"display\":null,\"flex\":null,\"flex_flow\":null,\"grid_area\":null,\"grid_auto_columns\":null,\"grid_auto_flow\":null,\"grid_auto_rows\":null,\"grid_column\":null,\"grid_gap\":null,\"grid_row\":null,\"grid_template_areas\":null,\"grid_template_columns\":null,\"grid_template_rows\":null,\"height\":null,\"justify_content\":null,\"justify_items\":null,\"left\":null,\"margin\":null,\"max_height\":null,\"max_width\":null,\"min_height\":null,\"min_width\":null,\"object_fit\":null,\"object_position\":null,\"order\":null,\"overflow\":null,\"padding\":null,\"right\":null,\"top\":null,\"visibility\":null,\"width\":null}},\"acc01864292f4d158adc2d11f235ff32\":{\"model_module\":\"@jupyter-widgets/base\",\"model_module_version\":\"2.0.0\",\"model_name\":\"LayoutModel\",\"state\":{\"_model_module\":\"@jupyter-widgets/base\",\"_model_module_version\":\"2.0.0\",\"_model_name\":\"LayoutModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/base\",\"_view_module_version\":\"2.0.0\",\"_view_name\":\"LayoutView\",\"align_content\":null,\"align_items\":null,\"align_self\":null,\"border_bottom\":null,\"border_left\":null,\"border_right\":null,\"border_top\":null,\"bottom\":null,\"display\":null,\"flex\":null,\"flex_flow\":null,\"grid_area\":null,\"grid_auto_columns\":null,\"grid_auto_flow\":null,\"grid_auto_rows\":null,\"grid_column\":null,\"grid_gap\":null,\"grid_row\":null,\"grid_template_areas\":null,\"grid_template_columns\":null,\"grid_template_rows\":null,\"height\":null,\"justify_content\":null,\"justify_items\":null,\"left\":null,\"margin\":null,\"max_height\":null,\"max_width\":null,\"min_height\":null,\"min_width\":null,\"object_fit\":null,\"object_position\":null,\"order\":null,\"overflow\":null,\"padding\":null,\"right\":null,\"top\":null,\"visibility\":null,\"width\":null}},\"ad2b8d8662eb41a79c748390c934e691\":{\"model_module\":\"@jupyter-widgets/output\",\"model_module_version\":\"1.0.0\",\"model_name\":\"OutputModel\",\"state\":{\"_dom_classes\":[],\"_model_module\":\"@jupyter-widgets/output\",\"_model_module_version\":\"1.0.0\",\"_model_name\":\"OutputModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/output\",\"_view_module_version\":\"1.0.0\",\"_view_name\":\"OutputView\",\"layout\":\"IPY_MODEL_f71c309fd7fa4229885d6afb79f85dee\",\"msg_id\":\"\",\"outputs\":[{\"data\":{\"text/html\":\"<pre style=\\\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\\\">Computing ... <span style=\\\"color: #008000; text-decoration-color: #008000\\\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\\\"color: #800080; text-decoration-color: #800080\\\">100%</span> 0:00:00\\n</pre>\\n\",\"text/plain\":\"Computing ... \\u001b[32m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\\u001b[0m \\u001b[35m100%\\u001b[0m 0:00:00\\n\"},\"metadata\":{},\"output_type\":\"display_data\"}],\"tabbable\":null,\"tooltip\":null}},\"ad94a7e06b16464392c71772bf5dcfc7\":{\"model_module\":\"@jupyter-widgets/output\",\"model_module_version\":\"1.0.0\",\"model_name\":\"OutputModel\",\"state\":{\"_dom_classes\":[],\"_model_module\":\"@jupyter-widgets/output\",\"_model_module_version\":\"1.0.0\",\"_model_name\":\"OutputModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/output\",\"_view_module_version\":\"1.0.0\",\"_view_name\":\"OutputView\",\"layout\":\"IPY_MODEL_0094c0e4b5c44bbbb4efe74f50f8d2c3\",\"msg_id\":\"\",\"outputs\":[{\"data\":{\"text/html\":\"<pre style=\\\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\\\">Computing ... <span style=\\\"color: #008000; text-decoration-color: #008000\\\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\\\"color: #800080; text-decoration-color: #800080\\\">100%</span> 0:00:00\\n</pre>\\n\",\"text/plain\":\"Computing ... \\u001b[32m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\\u001b[0m \\u001b[35m100%\\u001b[0m 0:00:00\\n\"},\"metadata\":{},\"output_type\":\"display_data\"}],\"tabbable\":null,\"tooltip\":null}},\"b351d5a5ef1a4bc98340fe4b5828b512\":{\"model_module\":\"@jupyter-widgets/output\",\"model_module_version\":\"1.0.0\",\"model_name\":\"OutputModel\",\"state\":{\"_dom_classes\":[],\"_model_module\":\"@jupyter-widgets/output\",\"_model_module_version\":\"1.0.0\",\"_model_name\":\"OutputModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/output\",\"_view_module_version\":\"1.0.0\",\"_view_name\":\"OutputView\",\"layout\":\"IPY_MODEL_ec53badc30f6454c94d5e5b43f4cf7db\",\"msg_id\":\"\",\"outputs\":[{\"data\":{\"text/html\":\"<pre style=\\\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\\\">Sampling ... <span style=\\\"color: #008000; text-decoration-color: #008000\\\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\\\"color: #800080; text-decoration-color: #800080\\\">100%</span> 0:00:00 / 0:00:00\\n</pre>\\n\",\"text/plain\":\"Sampling ... \\u001b[32m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\\u001b[0m \\u001b[35m100%\\u001b[0m 0:00:00 / 0:00:00\\n\"},\"metadata\":{},\"output_type\":\"display_data\"}],\"tabbable\":null,\"tooltip\":null}},\"d21d110abbf142878d377066eea741a8\":{\"model_module\":\"@jupyter-widgets/base\",\"model_module_version\":\"2.0.0\",\"model_name\":\"LayoutModel\",\"state\":{\"_model_module\":\"@jupyter-widgets/base\",\"_model_module_version\":\"2.0.0\",\"_model_name\":\"LayoutModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/base\",\"_view_module_version\":\"2.0.0\",\"_view_name\":\"LayoutView\",\"align_content\":null,\"align_items\":null,\"align_self\":null,\"border_bottom\":null,\"border_left\":null,\"border_right\":null,\"border_top\":null,\"bottom\":null,\"display\":null,\"flex\":null,\"flex_flow\":null,\"grid_area\":null,\"grid_auto_columns\":null,\"grid_auto_flow\":null,\"grid_auto_rows\":null,\"grid_column\":null,\"grid_gap\":null,\"grid_row\":null,\"grid_template_areas\":null,\"grid_template_columns\":null,\"grid_template_rows\":null,\"height\":null,\"justify_content\":null,\"justify_items\":null,\"left\":null,\"margin\":null,\"max_height\":null,\"max_width\":null,\"min_height\":null,\"min_width\":null,\"object_fit\":null,\"object_position\":null,\"order\":null,\"overflow\":null,\"padding\":null,\"right\":null,\"top\":null,\"visibility\":null,\"width\":null}},\"ec53badc30f6454c94d5e5b43f4cf7db\":{\"model_module\":\"@jupyter-widgets/base\",\"model_module_version\":\"2.0.0\",\"model_name\":\"LayoutModel\",\"state\":{\"_model_module\":\"@jupyter-widgets/base\",\"_model_module_version\":\"2.0.0\",\"_model_name\":\"LayoutModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/base\",\"_view_module_version\":\"2.0.0\",\"_view_name\":\"LayoutView\",\"align_content\":null,\"align_items\":null,\"align_self\":null,\"border_bottom\":null,\"border_left\":null,\"border_right\":null,\"border_top\":null,\"bottom\":null,\"display\":null,\"flex\":null,\"flex_flow\":null,\"grid_area\":null,\"grid_auto_columns\":null,\"grid_auto_flow\":null,\"grid_auto_rows\":null,\"grid_column\":null,\"grid_gap\":null,\"grid_row\":null,\"grid_template_areas\":null,\"grid_template_columns\":null,\"grid_template_rows\":null,\"height\":null,\"justify_content\":null,\"justify_items\":null,\"left\":null,\"margin\":null,\"max_height\":null,\"max_width\":null,\"min_height\":null,\"min_width\":null,\"object_fit\":null,\"object_position\":null,\"order\":null,\"overflow\":null,\"padding\":null,\"right\":null,\"top\":null,\"visibility\":null,\"width\":null}},\"f71c309fd7fa4229885d6afb79f85dee\":{\"model_module\":\"@jupyter-widgets/base\",\"model_module_version\":\"2.0.0\",\"model_name\":\"LayoutModel\",\"state\":{\"_model_module\":\"@jupyter-widgets/base\",\"_model_module_version\":\"2.0.0\",\"_model_name\":\"LayoutModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/base\",\"_view_module_version\":\"2.0.0\",\"_view_name\":\"LayoutView\",\"align_content\":null,\"align_items\":null,\"align_self\":null,\"border_bottom\":null,\"border_left\":null,\"border_right\":null,\"border_top\":null,\"bottom\":null,\"display\":null,\"flex\":null,\"flex_flow\":null,\"grid_area\":null,\"grid_auto_columns\":null,\"grid_auto_flow\":null,\"grid_auto_rows\":null,\"grid_column\":null,\"grid_gap\":null,\"grid_row\":null,\"grid_template_areas\":null,\"grid_template_columns\":null,\"grid_template_rows\":null,\"height\":null,\"justify_content\":null,\"justify_items\":null,\"left\":null,\"margin\":null,\"max_height\":null,\"max_width\":null,\"min_height\":null,\"min_width\":null,\"object_fit\":null,\"object_position\":null,\"order\":null,\"overflow\":null,\"padding\":null,\"right\":null,\"top\":null,\"visibility\":null,\"width\":null}},\"fe5decef0e764110b805107b3a04b9ff\":{\"model_module\":\"@jupyter-widgets/output\",\"model_module_version\":\"1.0.0\",\"model_name\":\"OutputModel\",\"state\":{\"_dom_classes\":[],\"_model_module\":\"@jupyter-widgets/output\",\"_model_module_version\":\"1.0.0\",\"_model_name\":\"OutputModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/output\",\"_view_module_version\":\"1.0.0\",\"_view_name\":\"OutputView\",\"layout\":\"IPY_MODEL_57c55c844f9f4c14a9d605fcac917557\",\"msg_id\":\"\",\"outputs\":[{\"data\":{\"text/html\":\"<pre style=\\\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\\\">Sampling ... <span style=\\\"color: #008000; text-decoration-color: #008000\\\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\\\"color: #800080; text-decoration-color: #800080\\\">100%</span> 0:00:00 / 0:00:00\\n</pre>\\n\",\"text/plain\":\"Sampling ... \\u001b[32m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\\u001b[0m \\u001b[35m100%\\u001b[0m 0:00:00 / 0:00:00\\n\"},\"metadata\":{},\"output_type\":\"display_data\"}],\"tabbable\":null,\"tooltip\":null}},\"ff9820d24a564479a04b7b5349a36fd2\":{\"model_module\":\"@jupyter-widgets/base\",\"model_module_version\":\"2.0.0\",\"model_name\":\"LayoutModel\",\"state\":{\"_model_module\":\"@jupyter-widgets/base\",\"_model_module_version\":\"2.0.0\",\"_model_name\":\"LayoutModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/base\",\"_view_module_version\":\"2.0.0\",\"_view_name\":\"LayoutView\",\"align_content\":null,\"align_items\":null,\"align_self\":null,\"border_bottom\":null,\"border_left\":null,\"border_right\":null,\"border_top\":null,\"bottom\":null,\"display\":null,\"flex\":null,\"flex_flow\":null,\"grid_area\":null,\"grid_auto_columns\":null,\"grid_auto_flow\":null,\"grid_auto_rows\":null,\"grid_column\":null,\"grid_gap\":null,\"grid_row\":null,\"grid_template_areas\":null,\"grid_template_columns\":null,\"grid_template_rows\":null,\"height\":null,\"justify_content\":null,\"justify_items\":null,\"left\":null,\"margin\":null,\"max_height\":null,\"max_width\":null,\"min_height\":null,\"min_width\":null,\"object_fit\":null,\"object_position\":null,\"order\":null,\"overflow\":null,\"padding\":null,\"right\":null,\"top\":null,\"visibility\":null,\"width\":null}}},\"version_major\":2,\"version_minor\":0}\n</script>\n"
      ]
    }
  }
}